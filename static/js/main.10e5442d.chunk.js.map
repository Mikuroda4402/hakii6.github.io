{"version":3,"sources":["features/locales/localesSlice.ts","functions/LocalStorage.ts","functions/Common.ts","features/raceSimulator/constants/Coefs.tsx","features/raceSimulator/constants/Constants.tsx","features/raceSimulator/functions/Uma.ts","features/raceSimulator/functions/Race.ts","features/raceSimulator/raceSimulatorSlice.tsx","store.tsx","components/raceSimulator/umaForm/StatusForm.tsx","components/raceSimulator/umaForm/OptionForm.tsx","components/raceSimulator/umaForm/MainForm.tsx","components/raceSimulator/umaForm/CreateUmaDialog.tsx","components/raceSimulator/umaForm/index.tsx","components/raceSimulator/champMeet/SelectUma.tsx","components/raceSimulator/champMeet/RaceLineChart.tsx","components/raceSimulator/champMeet/index.tsx","components/raceSimulator/index.tsx","components/NavBar.tsx","App.tsx","locales/resources.ts","i18n.tsx","index.tsx"],"names":["initialState","darkMode","localStorage","getItem","localesSlice","createSlice","name","reducers","switchDarkMode","state","actions","getStorage","property","storageArray","JSON","parse","e","removeItem","Array","isArray","updateStorage","obj","index","rawArray","length","setItem","stringify","getSingleStorage","storageObject","round","num","Math","Coefs","motivation","surface","sp","styleFit","S","wisdom","A","B","C","D","E","F","G","distFit","v","a","surfaceFit","usingStyle","phase0","phase1","phase2","phase3","spConsume","normal","tempt","slacking","descentMode","Constants","framesPerSec","statusType","frameLength","speed","power","positionKeep","posKeepSpeedCoef","speedUp","overtake","paceUp","paceDown","Uma","umaOption","rawStatus","umaName","status","style","coefParams","skillActRate","temptRate","spurtSpCoef","spSurfaceCoef","spMax","spurtSpeed","acc","dec","temptSection","setPosKeepCoef","waku","phase","section","slopeValue","pos","lanePos","momentSpeed","order","targetSpeed","temptCond","temptCount","temptLast","posKeepCond","mode","speedCoef","cd","start","rate","floorDist","ceilDist","momentAcc","speedNeeded","cond","startdash","posKeep","spurt","tiring","checkCondStartArr","checkCondEndArr","findUmaPos","umaOrder","umaStateList","umaState","find","curUmaState","undefined","setReady","checkCondStart","raceParams","dist","baseSpeed","spSpeedCoef","totalTime","checkCondEnd","push","random","checkPosKeep","sectionDist","checkPosKeep2","posDiff","lastDist","checkState","filter","condName","updateState","nextSpeed","guts","baseTargetSpeed","getTargetSpeed","baseAcc","getAcc","maxAcc","abs","getNextSpeed","avgSpeed","nextSp","spCost","descent","getNextSp","setState","Object","assign","getState","move","this","fit","motBonus","styleFitCoef","distFitCoef","surfaceFitCoef","usingStyleCoef","rawSpeed","rawStamina","stamina","rawPower","rawGuts","rawWisdom","passiveSkillEffect","statusCheck","reduce","total","curValue","min","ceil","surfaceConstant","minValue","keys","forEach","key","checkMinValue","value","wisMod","log10","vCoef","speedEffect","accCoef","aCoef","max","surfaceCoef","floor","courseData","constants","stylePosKeepCoef","Race","raceOption","umaOptionList","raceTrackId","raceId","groundCond","weather","season","raceName","distType","phaseLine","turn","laneMax","finishTimeMin","finishTimeMax","corners","slopes","raceState","umaCount","raceResult","umaList","distPosKeepCoef","getRaceParams","getPosDetails","findIndex","t","i","slopeType","setUmaOrder","listLength","j","saveFrameResult","progressRace","map","umaClass","newUmaState","checkAllGoal","every","getRaceResult","getUmaStateList","getRaceState","raceData","courses","distance","String","distanceType","courseSetStatus","setRaceParams","umaDataList","raceSimulatorSlice","saveRace","action","payload","setUmaDataList","simulateStart","race","frameCount","reducer","combineReducers","locales","localesReducer","raceSimulator","raceSimulatorReducer","store","configureStore","StatusForm","umaData","setUmaData","useTranslation","statusTypeArr","i18n","handleChange","target","Number","checkError","useCallback","checkValue","isInteger","FormControl","required","TextField","id","type","label","error","helperText","variant","onChange","OptionForm","InputLabel","Select","native","labelId","defaultUma","MainForm","umaIndex","useState","useEffect","storageData","showStorage","ButtonGroup","color","Button","onClick","CreateUmaDialog","dialogOpen","setDialogOpen","setUmaName","handleSubmit","concat","createStorage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","margin","event","currentTarget","fullWidth","DialogActions","UmaForm","setUmaIndex","disabled","SelectUma","fill","checkbox","setCheckbox","dispatch","useDispatch","changeIndex","newCheckbox","checkboxList","useMemo","FormControlLabel","control","Checkbox","checked","inputProps","FormGroup","raceSimulatorActions","useStyles","makeStyles","theme","createStyles","root","width","RaceLineChart","useSelector","frameIndex","setFrameIndex","moveSpeed","setMoveSpeed","classes","intervalRef","useRef","options","parsing","xAxisKey","yAxisKey","plugins","tooltip","callbacks","context","raw","interaction","intersect","animation","scales","x","ticks","callback","poses","y","radius","data","datasets","umaLineDataList","backgroundColor","borderColor","borderWidth","stopMoving","current","clearInterval","className","Typography","gutterBottom","Slider","marks","step","newValue","onMouseDown","setInterval","prevState","onMouseUp","onMouseLeave","ChampMeet","storageList","RaceSimulator","flexGrow","title","themeButton","marginLeft","spacing","NavBar","trigger","useScrollTrigger","language","locale","setLocale","Slide","appear","direction","in","AppBar","position","Toolbar","changeLanguage","displayEmpty","MenuItem","Fab","LocalesActions","darkTheme","createTheme","palette","primary","grey","overrides","MuiPaper","marginTop","lightTheme","props","App","ThemeProvider","CssBaseline","Container","maxWidth","Paper","elevation","exact","path","render","resources","ja","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","document","documentElement","use","LanguageDetector","initReactI18next","init","detection","fallbackLng","supportedLngs","interpolation","escapeValue","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.10e5442d.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\n// import i18n from '../../i18n';\r\n// redux is not supporting suspense (i18n.changeLanguage) yet\r\nconst initialState = {\r\n  // locale: i18n.language as string,\r\n  darkMode: localStorage.getItem('darkMode') !== 'false',\r\n};\r\n\r\nconst localesSlice = createSlice({\r\n  name: 'locales',\r\n  initialState,\r\n  reducers: {\r\n    // changeLocale: (state, action) => {\r\n    //   i18n.changeLanguage(action.payload as string);\r\n    //   state.locale = action.payload;\r\n    // },\r\n    switchDarkMode: (state) => {\r\n      state.darkMode = !state.darkMode;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { switchDarkMode } = localesSlice.actions;\r\n\r\nexport default localesSlice.reducer;\r\n","type TArray = <T>(arg: string) => T[];\r\n\r\nexport const getStorage: TArray = (property) => {\r\n  let storageArray = localStorage.getItem(property);\r\n  if (storageArray !== null) {\r\n    try {\r\n      storageArray = JSON.parse(storageArray);\r\n    } catch (e) {\r\n      localStorage.removeItem(property);\r\n      return [];\r\n    }\r\n  }\r\n  if (!Array.isArray(storageArray)) {\r\n    return [];\r\n  }\r\n  return storageArray;\r\n};\r\n\r\nexport const createStorage = (property: string, obj: unknown): void => {\r\n  const rawArray = getStorage(property);\r\n  localStorage.setItem(property, JSON.stringify(rawArray.concat(obj)));\r\n};\r\n\r\nexport const showStorage = (\r\n  property: string,\r\n  index: number\r\n): Record<string, unknown> | null => {\r\n  const rawArray = getStorage(property);\r\n  if (rawArray.length > index) {\r\n    return rawArray[index] as Record<string, unknown>;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const updateStorage = (\r\n  property: string,\r\n  obj: unknown,\r\n  index: number\r\n): void => {\r\n  const rawArray = getStorage(property);\r\n  if (rawArray.length > index) {\r\n    rawArray[index] = obj;\r\n    localStorage.setItem(property, JSON.stringify(rawArray));\r\n  }\r\n};\r\n\r\nexport const getSingleStorage = (\r\n  property: string\r\n): Record<string, unknown> | null => {\r\n  const storageObject = localStorage.getItem(property);\r\n  if (storageObject !== null) {\r\n    try {\r\n      const object = JSON.parse(storageObject) as Record<string, unknown>;\r\n      return object;\r\n    } catch (e) {\r\n      localStorage.removeItem(property);\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const setSingleStorage = (property: string, obj: unknown): void => {\r\n  localStorage.setItem(property, JSON.stringify(obj));\r\n};\r\n\r\n// export const deleteStorage = (\r\n//   property: string,\r\n//   obj: unknown,\r\n//   mode: string\r\n// ): void => {\r\n//   switch (mode) {\r\n//     case 'replace':\r\n//       localStorage.setItem(property, JSON.stringify(obj));\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n// };\r\n\r\nexport default getSingleStorage;\r\n","export const roundNumbers = <T extends Record<PropertyKey, unknown>>(\r\n  obj: T\r\n): T => {\r\n  (Object.keys(obj) as (keyof T)[]).forEach((key: keyof T) => {\r\n    if (typeof obj[key] === 'number') {\r\n      const value = obj[key] as number;\r\n      (obj[key] as number) = (Math.round(value * 1000.0) / 1000.0) as number;\r\n    }\r\n  });\r\n  return obj;\r\n};\r\n\r\nexport const round = (num: number): number =>\r\n  (Math.round(num * 1000.0) / 1000.0) as number;\r\n\r\nexport const checkMinValue = <T extends Record<PropertyKey, unknown>>(\r\n  obj: T,\r\n  minValue: number\r\n): T => {\r\n  (Object.keys(obj) as (keyof T)[]).forEach((key: keyof T) => {\r\n    if (typeof obj[key] === 'number') {\r\n      if (obj[key] <= minValue) {\r\n        (obj[key] as number) = minValue as number;\r\n      }\r\n    }\r\n  });\r\n  return obj;\r\n};\r\n\r\nexport const generateRandomNumberArray = (\r\n  size: number,\r\n  max: number\r\n): Array<number> => {\r\n  const numberArr = [];\r\n  for (let i = 0; i < max; i += 1) {\r\n    numberArr.push(Math.floor(Math.random() * max));\r\n  }\r\n  return numberArr;\r\n};\r\n\r\nexport default generateRandomNumberArray;\r\n","interface CoefData {\r\n  motivation: Record<string, number>;\r\n  surface: Record<string, Record<string, Record<string, number>>>;\r\n  styleFit: Record<string, Record<string, number>>;\r\n  distFit: Record<string, Record<string, number>>;\r\n  surfaceFit: Record<string, Record<string, number>>;\r\n  usingStyle: Record<\r\n    string,\r\n    {\r\n      sp: number;\r\n      v: Record<string, number>;\r\n      a: Record<string, number>;\r\n    }\r\n  >;\r\n  spConsume: Record<string, number>;\r\n}\r\n\r\nexport const Coefs: CoefData = {\r\n  motivation: {\r\n    0: 1.04,\r\n    1: 1.02,\r\n    2: 1,\r\n    3: 0.98,\r\n    4: 0.96,\r\n  },\r\n  surface: {\r\n    1: {\r\n      0: {\r\n        sp: 1,\r\n      },\r\n      1: {\r\n        sp: 1,\r\n      },\r\n      2: {\r\n        sp: 1.02,\r\n      },\r\n      3: {\r\n        sp: 1.02,\r\n      },\r\n    },\r\n    2: {\r\n      0: {\r\n        sp: 1,\r\n      },\r\n      1: {\r\n        sp: 1,\r\n      },\r\n      2: {\r\n        sp: 1.01,\r\n      },\r\n      3: {\r\n        sp: 1.02,\r\n      },\r\n    },\r\n  },\r\n  styleFit: {\r\n    S: {\r\n      wisdom: 1.1,\r\n    },\r\n    A: {\r\n      wisdom: 1,\r\n    },\r\n    B: {\r\n      wisdom: 0.85,\r\n    },\r\n    C: {\r\n      wisdom: 0.75,\r\n    },\r\n    D: {\r\n      wisdom: 0.6,\r\n    },\r\n    E: {\r\n      wisdom: 0.4,\r\n    },\r\n    F: {\r\n      wisdom: 0.2,\r\n    },\r\n    G: {\r\n      wisdom: 0.1,\r\n    },\r\n  },\r\n  distFit: {\r\n    S: {\r\n      v: 1.05,\r\n      a: 1,\r\n    },\r\n    A: {\r\n      v: 1,\r\n      a: 1,\r\n    },\r\n    B: {\r\n      v: 0.9,\r\n      a: 1,\r\n    },\r\n    C: {\r\n      v: 0.8,\r\n      a: 1,\r\n    },\r\n    D: {\r\n      v: 0.6,\r\n      a: 1,\r\n    },\r\n    E: {\r\n      v: 0.4,\r\n      a: 0.6,\r\n    },\r\n    F: {\r\n      v: 0.2,\r\n      a: 0.5,\r\n    },\r\n    G: {\r\n      v: 0.1,\r\n      a: 0.4,\r\n    },\r\n  },\r\n  surfaceFit: {\r\n    S: {\r\n      a: 1.05,\r\n    },\r\n    A: {\r\n      a: 1,\r\n    },\r\n    B: {\r\n      a: 0.9,\r\n    },\r\n    C: {\r\n      a: 0.8,\r\n    },\r\n    D: {\r\n      a: 0.7,\r\n    },\r\n    E: {\r\n      a: 0.5,\r\n    },\r\n    F: {\r\n      a: 0.3,\r\n    },\r\n    G: {\r\n      a: 0.1,\r\n    },\r\n  },\r\n  usingStyle: {\r\n    1: {\r\n      sp: 0.95,\r\n      v: {\r\n        phase0: 1,\r\n        phase1: 0.98,\r\n        phase2: 0.962,\r\n      },\r\n      a: {\r\n        phase0: 1,\r\n        phase1: 1,\r\n        phase2: 0.996,\r\n        phase3: 0.996,\r\n      },\r\n    },\r\n    2: {\r\n      sp: 0.89,\r\n      v: {\r\n        phase0: 0.978,\r\n        phase1: 0.991,\r\n        phase2: 0.975,\r\n      },\r\n      a: {\r\n        phase0: 0.985,\r\n        phase1: 1,\r\n        phase2: 0.996,\r\n        phase3: 0.996,\r\n      },\r\n    },\r\n    3: {\r\n      sp: 1,\r\n      v: {\r\n        phase0: 0.938,\r\n        phase1: 0.998,\r\n        phase2: 0.994,\r\n      },\r\n      a: {\r\n        phase0: 0.975,\r\n        phase1: 1,\r\n        phase2: 1,\r\n        phase3: 1,\r\n      },\r\n    },\r\n    4: {\r\n      sp: 0.995,\r\n      v: {\r\n        phase0: 0.931,\r\n        phase1: 1,\r\n        phase2: 1,\r\n      },\r\n      a: {\r\n        phase0: 0.945,\r\n        phase1: 1,\r\n        phase2: 0.997,\r\n        phase3: 0.997,\r\n      },\r\n    },\r\n  },\r\n  spConsume: {\r\n    normal: 1,\r\n    tempt: 1.6,\r\n    slacking: 0.6,\r\n    descentMode: 0.4,\r\n  },\r\n};\r\n\r\n// export const setCoefData = (\r\n//   umaParams: UmaParams,\r\n//   raceParams: RaceParams\r\n// ): UmaParams => {\r\n//   const { motivation, usingStyle, fit } = umaParams;\r\n//   const { style, dist, surface } = fit;\r\n//   return {\r\n//     ...umaParams,\r\n//     coefData: {\r\n//       motBonus: Coefs.motivation[motivation],\r\n//       styleFitCoef: Coefs.styleFit[style],\r\n//       distFitCoef: Coefs.distFit[dist],\r\n//       surfaceFitCoef: Coefs.surfaceFit[surface],\r\n//       usingStyleCoef: Coefs.usingStyle[usingStyle],\r\n//     },\r\n//   };\r\n// };\r\nexport default Coefs;\r\n","import { StatusType, ConstantsData } from '../types';\r\n\r\nconst framesPerSec = 15;\r\nconst statusType: StatusType[] = [\r\n  'speed',\r\n  'stamina',\r\n  'power',\r\n  'guts',\r\n  'wisdom',\r\n];\r\n\r\nexport const Constants: ConstantsData = {\r\n  framesPerSec,\r\n  statusType,\r\n  frameLength: 1.0 / framesPerSec,\r\n  surface: {\r\n    1: {\r\n      0: {\r\n        speed: 0,\r\n        power: 0,\r\n      },\r\n      1: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      2: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      3: {\r\n        speed: -50,\r\n        power: -50,\r\n      },\r\n    },\r\n    2: {\r\n      0: {\r\n        speed: 0,\r\n        power: -100,\r\n      },\r\n      1: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      2: {\r\n        speed: 0,\r\n        power: -100,\r\n      },\r\n      3: {\r\n        speed: -50,\r\n        power: -100,\r\n      },\r\n    },\r\n  },\r\n  spConsume: {\r\n    normal: 1,\r\n    tempt: 1.6,\r\n    positionKeep: 0.6,\r\n    descentMode: 0.4,\r\n  },\r\n};\r\n\r\nexport default Constants;\r\n","import {\r\n  UmaOption,\r\n  Status,\r\n  StatusType,\r\n  ConstantsData,\r\n  RaceTrack,\r\n} from '../types';\r\nimport { RaceParams } from './Race';\r\nimport { roundNumbers, round, checkMinValue } from '../../../functions/Common';\r\n\r\nimport { Coefs } from '../constants/Coefs';\r\nimport Constants from '../constants/Constants';\r\n\r\nconst constants: ConstantsData = Constants;\r\nconst { framesPerSec, frameLength, statusType } = constants;\r\n\r\nexport type UmaClass = UmaMethods & UmaParams & UmaState;\r\n\r\ninterface CoefType {\r\n  motBonus: number;\r\n  styleFitCoef: Record<string, number>;\r\n  distFitCoef: Record<string, number>;\r\n  surfaceFitCoef: Record<string, number>;\r\n  usingStyleCoef: {\r\n    sp: number;\r\n    v: Record<string, number>;\r\n    a: Record<string, number>;\r\n  };\r\n}\r\n\r\ninterface UmaMethods {\r\n  // method\r\n  setReady: (arg1: UmaState) => UmaState;\r\n  getState: () => any;\r\n  move: (arg1: UmaState, arg2: UmaState[]) => UmaState;\r\n  findUmaPos: (arg1: number, arg2: UmaState[]) => number;\r\n}\r\n\r\ninterface UmaParams {\r\n  surfaceFit: string;\r\n  distFit: string;\r\n  styleFit: string;\r\n  status: Status;\r\n  motivation: string;\r\n  style: string;\r\n  coefParams: CoefType;\r\n  skillActRate: number;\r\n  temptRate: number;\r\n  spMax: number;\r\n  v: number[];\r\n  spurtSpeed: number;\r\n  acc: number[];\r\n  dec: number[];\r\n  temptSection: number;\r\n  spurtSpCoef: number;\r\n  setPosKeepCoef: any;\r\n}\r\n\r\nexport interface UmaState {\r\n  waku: number;\r\n  phase: number;\r\n  section: number;\r\n  slopeValue: number;\r\n  pos: number;\r\n  lanePos: number;\r\n  momentSpeed: number;\r\n  targetSpeed: number;\r\n  speedNeeded: number;\r\n  momentAcc: number;\r\n  sp: number;\r\n  order: number;\r\n  temptCond: {\r\n    temptCount: number;\r\n    temptLast: number;\r\n  };\r\n  posKeepCond: {\r\n    mode: 'normal' | 'speedUp' | 'overtake' | 'paceUp' | 'paceDown';\r\n    speedCoef: number;\r\n    cd: number;\r\n    start: number;\r\n    rate: number;\r\n    floorDist: number;\r\n    ceilDist: number;\r\n  };\r\n  cond: Record<string, boolean>;\r\n}\r\n\r\nconst posKeepSpeedCoef = {\r\n  normal: 1.0,\r\n  speedUp: 1.04,\r\n  overtake: 1.05,\r\n  paceUp: 1.04,\r\n  paceDown: 0.915,\r\n};\r\n\r\nexport class Uma implements UmaMethods, UmaParams, UmaState {\r\n  static raceParams: RaceParams;\r\n\r\n  static setRaceParams(raceParams: RaceParams): void {\r\n    this.raceParams = raceParams;\r\n  }\r\n\r\n  private rawStatus: Status;\r\n\r\n  private umaName: string;\r\n\r\n  surfaceFit: string;\r\n\r\n  distFit: string;\r\n\r\n  styleFit: string;\r\n\r\n  status: Status;\r\n\r\n  motivation: string;\r\n\r\n  style: string;\r\n\r\n  coefParams: CoefType;\r\n\r\n  skillActRate: number;\r\n\r\n  temptRate: number;\r\n\r\n  spurtSpCoef: number;\r\n\r\n  spSurfaceCoef: number;\r\n\r\n  spMax: number;\r\n\r\n  v: number[];\r\n\r\n  spurtSpeed: number;\r\n\r\n  acc: number[];\r\n\r\n  dec: number[];\r\n\r\n  temptSection: number;\r\n\r\n  setPosKeepCoef: any;\r\n\r\n  waku = 0;\r\n\r\n  phase = 0;\r\n\r\n  section = 0;\r\n\r\n  slopeValue = 0;\r\n\r\n  pos = 0;\r\n\r\n  lanePos = 0;\r\n\r\n  momentSpeed = 0;\r\n\r\n  sp = 0;\r\n\r\n  order = 0;\r\n\r\n  targetSpeed = 0;\r\n\r\n  temptCond = {\r\n    temptCount: 0,\r\n    temptLast: 0,\r\n  };\r\n\r\n  posKeepCond = {\r\n    mode: 'normal' as UmaState['posKeepCond']['mode'],\r\n    speedCoef: 1,\r\n    cd: 0,\r\n    start: 0,\r\n    rate: 0,\r\n    floorDist: 0,\r\n    ceilDist: 0,\r\n  };\r\n\r\n  momentAcc = 0;\r\n\r\n  speedNeeded = 0;\r\n\r\n  cond: Record<string, boolean> = {\r\n    startdash: true,\r\n    posKeep: true,\r\n    tempt: false,\r\n    spurt: false,\r\n    tiring: false,\r\n  };\r\n\r\n  checkCondStartArr: Array<string> = [];\r\n\r\n  checkCondEndArr: Array<string> = [];\r\n\r\n  constructor(umaOption: UmaOption) {\r\n    this.rawStatus = { ...umaOption.status };\r\n    this.umaName = umaOption.umaName;\r\n    this.motivation = umaOption.motivation;\r\n    this.style = umaOption.usingStyle;\r\n\r\n    this.surfaceFit = umaOption.fit.surface;\r\n    this.distFit = umaOption.fit.dist;\r\n    this.styleFit = umaOption.fit.style;\r\n    this.coefParams = {\r\n      motBonus: Coefs.motivation[this.motivation],\r\n      styleFitCoef: Coefs.styleFit[this.styleFit],\r\n      distFitCoef: Coefs.distFit[this.distFit],\r\n      surfaceFitCoef: Coefs.surfaceFit[this.surfaceFit],\r\n      usingStyleCoef: Coefs.usingStyle[this.style],\r\n    };\r\n\r\n    this.status = (() => {\r\n      const { raceParams } = Uma;\r\n      const { motBonus, styleFitCoef } = this.coefParams;\r\n      const {\r\n        speed: rawSpeed,\r\n        stamina: rawStamina,\r\n        power: rawPower,\r\n        guts: rawGuts,\r\n        wisdom: rawWisdom,\r\n      } = this.rawStatus;\r\n\r\n      const speedMutiplier = Uma.raceParams.statusCheck.reduce(\r\n        (total: number, curValue: StatusType) =>\r\n          total +\r\n          Math.min(\r\n            Math.ceil(\r\n              (this.rawStatus[curValue] * this.coefParams.motBonus) / 300\r\n            ),\r\n            4\r\n          ) *\r\n            0.05,\r\n        1\r\n      );\r\n\r\n      // ///////////\r\n      // // todo: let users to set it by themselves\r\n      const passiveSkillEffect = {\r\n        speed: 0,\r\n        stamina: 0,\r\n        power: 0,\r\n        guts: 0,\r\n        wisdom: 0,\r\n      };\r\n\r\n      const status = {\r\n        speed:\r\n          rawSpeed * motBonus * speedMutiplier +\r\n          raceParams.surfaceConstant.speed +\r\n          passiveSkillEffect.speed,\r\n        stamina: rawStamina * motBonus + passiveSkillEffect.stamina,\r\n        power:\r\n          rawPower * motBonus +\r\n          raceParams.surfaceConstant.power +\r\n          passiveSkillEffect.power,\r\n        guts: rawGuts * motBonus + passiveSkillEffect.guts,\r\n        wisdom:\r\n          rawWisdom * motBonus * styleFitCoef.wisdom +\r\n          passiveSkillEffect.wisdom,\r\n      };\r\n      return checkMinValue(roundNumbers(status), 1);\r\n    })();\r\n\r\n    this.v = (() => {\r\n      const { speed, guts, wisdom } = this.status;\r\n      const { distFitCoef, usingStyleCoef } = this.coefParams;\r\n      const { baseSpeed } = Uma.raceParams;\r\n\r\n      // /////////\r\n      // TODO: set random\r\n      // let wisMod = {}\r\n      // wisMod.max = ((umaOption.status.wisdom / 5500) * (Math.log10(umaOption.status.wisdom) - 1) * 0.01)\r\n      // wisMod.min = (wisMod.max - .65)\r\n      // wisMod.avg = (wisMod.max - .325)\r\n      const wisMod =\r\n        ((wisdom / 5500) * Math.log10(wisdom * 0.1) - 0.325) * 0.01;\r\n      const vCoef = usingStyleCoef.v;\r\n      const speedEffect = (speed * 500) ** 0.5 * distFitCoef.v * 0.002;\r\n      this.spurtSpeed = speedEffect;\r\n      return [\r\n        round(baseSpeed * (vCoef.phase0 + wisMod)),\r\n        round(baseSpeed * (vCoef.phase1 + wisMod)),\r\n        round(baseSpeed * (vCoef.phase2 + wisMod) + speedEffect),\r\n        round(baseSpeed * (vCoef.phase2 + wisMod) + speedEffect),\r\n      ];\r\n    })();\r\n    this.spurtSpeed += (this.v[2] + Uma.raceParams.baseSpeed * 0.01) * 1.05;\r\n\r\n    this.acc = (() => {\r\n      const { surfaceFitCoef, distFitCoef, usingStyleCoef } = this.coefParams;\r\n      const { power } = this.status;\r\n      const accCoef = (500 * power) ** 0.5 * surfaceFitCoef.a * distFitCoef.a;\r\n      const aCoef = usingStyleCoef.a;\r\n      return [\r\n        round(accCoef * 0.0006 * aCoef.phase0),\r\n        round(accCoef * 0.0006 * aCoef.phase1),\r\n        round(accCoef * 0.0006 * aCoef.phase2),\r\n        round(accCoef * 0.0006 * aCoef.phase3),\r\n      ];\r\n    })();\r\n    this.dec = [-0.8, -1.0, -1.2, -1.2];\r\n\r\n    this.skillActRate = Math.max(\r\n      100 - 9000.0 / (this.rawStatus.wisdom * this.coefParams.motBonus),\r\n      20\r\n    );\r\n    this.temptRate = (6.5 / Math.log10(0.1 * this.status.wisdom + 1)) ** 2;\r\n    this.spurtSpCoef = 1 + 200 / (600 * this.status.guts) ** 0.5;\r\n    this.spSurfaceCoef = Uma.raceParams.surfaceCoef.sp;\r\n    this.spMax =\r\n      Uma.raceParams.dist +\r\n      0.8 * this.status.stamina * this.coefParams.usingStyleCoef.sp;\r\n\r\n    this.checkCondStartArr = ['tiring'];\r\n    this.checkCondEndArr = ['startdash', 'posKeep'];\r\n    // todo: rand\r\n    this.temptSection =\r\n      Math.random() * 100 < this.temptRate\r\n        ? Math.floor(Math.random() * 8) + 1\r\n        : -1;\r\n    if (this.temptSection !== -1) {\r\n      this.checkCondStartArr.push('tempt');\r\n    }\r\n  }\r\n\r\n  findUmaPos = (umaOrder: number, umaStateList: UmaState[]): number => {\r\n    const umaState = umaStateList.find(\r\n      (curUmaState: UmaState) => curUmaState.order === umaOrder\r\n    );\r\n    if (umaState === undefined) {\r\n      // todo: checkError\r\n      return 5000;\r\n    }\r\n    return umaState.pos;\r\n  };\r\n\r\n  setReady = (umaState: any): UmaState => ({\r\n    ...umaState,\r\n    sp: this.spMax,\r\n  });\r\n\r\n  checkCondStart: Record<string, () => boolean> = {\r\n    tiring: () => {\r\n      if (this.sp <= 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    spurt: () => {\r\n      if (this.phase < 2) {\r\n        return false;\r\n      }\r\n      const { spurtSpeed, spSurfaceCoef, spurtSpCoef } = this;\r\n      const { dist, baseSpeed } = Uma.raceParams;\r\n      const spSpeedCoef = (spurtSpeed - baseSpeed + 12.0) ** 2 / 144;\r\n      const totalTime = (dist - this.pos - 60) / spurtSpeed;\r\n      return this.sp >= 20 * spSpeedCoef * spSurfaceCoef * totalTime;\r\n    },\r\n    tempt: () => {\r\n      if (this.section === this.temptSection) {\r\n        this.temptCond = {\r\n          temptLast: 3 * framesPerSec,\r\n          temptCount: 1,\r\n        };\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  };\r\n\r\n  checkCondEnd: Record<string, () => boolean> = {\r\n    tiring: () => {\r\n      if (this.sp > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    startdash: () => {\r\n      if (this.momentSpeed >= Uma.raceParams.baseSpeed * 0.85) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    spurt: () => false,\r\n    posKeep: () => {\r\n      if (this.section > 10) {\r\n        this.checkCondStartArr.push('spurt');\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    tempt: () => {\r\n      this.temptCond.temptCount += 1;\r\n      if (this.temptCond.temptCount >= 12 * framesPerSec) {\r\n        return true;\r\n      }\r\n      if (this.temptCond.temptCount < this.temptCond.temptLast) {\r\n        if (Math.random() * 100 < 55) {\r\n          return true;\r\n        }\r\n        this.temptCond.temptLast += 3 * framesPerSec;\r\n      }\r\n      return false;\r\n    },\r\n  };\r\n\r\n  checkPosKeep = (umaStateList: UmaState[]) => {\r\n    switch (this.posKeepCond.mode) {\r\n      case 'normal':\r\n        if (this.posKeepCond.cd === 0) {\r\n          if (Math.random() * 100 < this.posKeepCond.rate || this.cond.tempt) {\r\n            if (this.order === 1 && this.findUmaPos(2, umaStateList) < 4.5) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'speedUp';\r\n            }\r\n            if (this.order !== 1) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'overtake';\r\n            }\r\n          }\r\n          this.posKeepCond.cd = framesPerSec * 3;\r\n          return 'normal';\r\n        }\r\n        this.posKeepCond.cd -= 1;\r\n        return 'normal';\r\n      case 'speedUp':\r\n        if (\r\n          this.pos - this.posKeepCond.start >= Uma.raceParams.sectionDist ||\r\n          this.pos - this.findUmaPos(2, umaStateList) > 4.5\r\n        ) {\r\n          return 'normal';\r\n        }\r\n        return 'speedUp';\r\n      case 'overtake':\r\n        if (\r\n          this.pos - this.posKeepCond.start >= Uma.raceParams.sectionDist ||\r\n          this.pos - this.findUmaPos(2, umaStateList) > 10\r\n        ) {\r\n          return 'normal';\r\n        }\r\n        return 'overtake';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  };\r\n\r\n  checkPosKeep2 = (umaStateList: UmaState[]) => {\r\n    const { ceilDist, floorDist, rate } = this.posKeepCond;\r\n    const { sectionDist } = Uma.raceParams;\r\n    const posDiff = this.findUmaPos(1, umaStateList) - this.pos;\r\n    const lastDist = this.pos - this.posKeepCond.start;\r\n\r\n    switch (this.posKeepCond.mode) {\r\n      case 'normal':\r\n        if (this.posKeepCond.cd === 0) {\r\n          if (posDiff > ceilDist) {\r\n            if (Math.random() * 100 < rate || this.cond.tempt) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'paceUp';\r\n            }\r\n          } else if (posDiff < floorDist) {\r\n            this.posKeepCond.start = this.pos;\r\n            return 'paceDown';\r\n          }\r\n\r\n          this.posKeepCond.cd = framesPerSec * 3;\r\n          return 'normal';\r\n        }\r\n        this.posKeepCond.cd -= 1;\r\n        return 'normal';\r\n      case 'paceUp':\r\n        if (lastDist >= sectionDist || posDiff > ceilDist) {\r\n          return 'normal';\r\n        }\r\n        return 'paceUp';\r\n      case 'paceDown':\r\n        // todo: if skill on, then true\r\n        if (lastDist >= sectionDist || posDiff > floorDist) {\r\n          return 'normal';\r\n        }\r\n        return 'paceDown';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  };\r\n\r\n  checkState = () => {\r\n    this.checkCondEndArr = this.checkCondEndArr.filter((condName: string) => {\r\n      if (this.checkCondEnd[condName as string]()) {\r\n        this.cond[condName as string] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    this.checkCondStartArr = this.checkCondStartArr.filter(\r\n      (condName: string) => {\r\n        if (this.checkCondStart[condName as string]()) {\r\n          this.cond[condName as string] = true;\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState = (): void => {\r\n    const { baseSpeed } = Uma.raceParams;\r\n    const { momentSpeed, targetSpeed, cond, status, phase, v, acc, dec } = this;\r\n    const getNextSpeed = (): number => {\r\n      const getTargetSpeed = (): number => {\r\n        const getPosKeepCoef = (): number => {\r\n          // todo\r\n          // if (section <= 10 && this.moveState !== 'startdash') {\r\n          //   this.setPosKeepCoef[this.posKeepCond.mode].call(this, raceState);\r\n          //   return posKeepSpeedCoef[this.posKeepCond.mode];\r\n          // }\r\n          return posKeepSpeedCoef[this.posKeepCond.mode];\r\n        };\r\n        const getSkillEffect = (): number => {\r\n          // todo\r\n          return 0;\r\n        };\r\n        const getSlopeEffect = (): number => {\r\n          if (this.slopeValue >= 1) {\r\n            return round((this.slopeValue * -200) / status.power);\r\n          }\r\n          if (this.slopeValue <= -1) {\r\n            // todo\r\n            return 0;\r\n          }\r\n          return 0;\r\n        };\r\n\r\n        if (cond.tiring) {\r\n          return baseSpeed * 0.85 + (status.guts * 200) ** 0.5 * 0.001;\r\n        }\r\n\r\n        let baseTargetSpeed = v[phase];\r\n\r\n        if (cond.startdash) {\r\n          // todo: posKeep vs startdash?\r\n          baseTargetSpeed = 0.85 * Uma.raceParams.baseSpeed;\r\n        } else if (cond.posKeep) {\r\n          baseTargetSpeed *= getPosKeepCoef();\r\n        } else if (cond.spurt) {\r\n          baseTargetSpeed = this.spurtSpeed;\r\n        }\r\n        return baseTargetSpeed + getSlopeEffect() + getSkillEffect();\r\n      };\r\n      const getMomentAcc = (): number => {\r\n        const getAcc = () => {\r\n          let baseAcc = acc[phase];\r\n          if (this.slopeValue >= 1) {\r\n            baseAcc *= 2 / 3;\r\n          }\r\n          if (cond.startdash) {\r\n            baseAcc += 24.0;\r\n          }\r\n\r\n          return baseAcc;\r\n          // todo\r\n          // return baseAcc + getSkillEffect();\r\n        };\r\n        const getDec = () => {\r\n          if (cond.tiring) {\r\n            return -1.2;\r\n          }\r\n          return dec[phase];\r\n        };\r\n        return this.speedNeeded >= 0 ? getAcc() : getDec();\r\n      };\r\n\r\n      this.targetSpeed = getTargetSpeed();\r\n      this.speedNeeded = this.targetSpeed - this.momentSpeed;\r\n      this.momentAcc = getMomentAcc();\r\n      this.speedNeeded = round(this.targetSpeed - this.momentSpeed);\r\n      const maxAcc = this.momentAcc * frameLength;\r\n\r\n      return Math.abs(this.speedNeeded) < Math.abs(maxAcc)\r\n        ? this.targetSpeed\r\n        : this.momentSpeed + maxAcc;\r\n    };\r\n    const getNextSp = (avgSpeed: number): number => {\r\n      let spCost = (20 * (avgSpeed - baseSpeed + 12.0) ** 2) / 144;\r\n      if (cond.tempt) {\r\n        spCost *= 1.6;\r\n      } else if (cond.spurt) {\r\n        spCost *= this.spurtSpCoef;\r\n      }\r\n\r\n      if (cond.descent) {\r\n        spCost *= 0.4;\r\n      }\r\n\r\n      return this.sp - spCost * this.spSurfaceCoef * frameLength;\r\n    };\r\n\r\n    const nextSpeed = round(getNextSpeed());\r\n    const avgSpeed = round((this.momentSpeed + nextSpeed) / 2);\r\n    const nextSp = round(getNextSp(avgSpeed));\r\n\r\n    this.momentSpeed = nextSpeed;\r\n    this.sp = nextSp;\r\n    this.pos += round(avgSpeed * frameLength);\r\n  };\r\n\r\n  setState = (umaState: UmaState) => Object.assign(this, umaState);\r\n\r\n  getState = (): any => ({\r\n    pos: round(this.pos),\r\n    phase: this.phase,\r\n    section: this.section,\r\n    lanePos: 0,\r\n    momentSpeed: this.momentSpeed,\r\n    targetSpeed: this.targetSpeed,\r\n    speedNeeded: this.speedNeeded,\r\n    acc: this.acc,\r\n    sp: this.sp,\r\n    temptCond: { ...this.temptCond },\r\n    posKeepCond: { ...this.posKeepCond },\r\n    cond: this.cond,\r\n  });\r\n\r\n  move = (umaState: UmaState, umaStateList: UmaState[]): UmaState => {\r\n    this.setState(umaState);\r\n    this.checkState();\r\n    if (this.cond.posKeep) {\r\n      if (this.style === '1') {\r\n        this.posKeepCond.mode = this.checkPosKeep(umaStateList);\r\n      } else {\r\n        this.posKeepCond.mode = this.checkPosKeep2(umaStateList);\r\n      }\r\n    }\r\n    this.updateState();\r\n\r\n    return this.getState();\r\n  };\r\n}\r\n\r\nexport default Uma;\r\n","import {\r\n  UmaOption,\r\n  Status,\r\n  StatusType,\r\n  RaceOption,\r\n  ConstantsData,\r\n  RaceTrack,\r\n} from '../types';\r\n\r\nimport Uma, { UmaState, UmaClass } from './Uma';\r\n\r\nimport Constants from '../constants/Constants';\r\nimport CourseData from '../constants/CourseData.json';\r\nimport { Coefs } from '../constants/Coefs';\r\n\r\nimport { roundNumbers, round, checkMinValue } from '../../../functions/Common';\r\n\r\nconst courseData: Record<string, RaceTrack> = CourseData;\r\nconst constants: ConstantsData = Constants;\r\n\r\nconst { framesPerSec, frameLength, statusType } = constants;\r\n\r\nconst posKeepSpeedCoef = {\r\n  normal: 1.0,\r\n  speedUp: 1.04,\r\n  overtake: 1.05,\r\n  paceUp: 1.04,\r\n  paceDown: 0.915,\r\n};\r\n\r\nconst stylePosKeepCoef: Record<string, number[]> = {\r\n  '1': [1.0, 1.0],\r\n  '2': [3.0, 5.0],\r\n  '3': [6.5, 7.0],\r\n  '4': [7.5, 8.0],\r\n};\r\n\r\nexport interface RaceParams {\r\n  raceName: string;\r\n  dist: number;\r\n  phaseLine: number[];\r\n  sectionDist: number;\r\n  distType: string;\r\n  surface: string;\r\n  turn: string;\r\n  statusCheck: StatusType[];\r\n  laneMax: number;\r\n  finishTimeMin: number;\r\n  finishTimeMax: number;\r\n  corners: Record<string, number>[];\r\n  slopes: number[];\r\n  surfaceConstant: Record<string, number>;\r\n  surfaceCoef: Record<string, number>;\r\n  baseSpeed: number;\r\n}\r\n\r\ninterface RacePublicProperties {\r\n  raceName: string;\r\n\r\n  dist: number;\r\n\r\n  distType: string;\r\n\r\n  phaseLine: number[];\r\n\r\n  sectionDist: number;\r\n\r\n  surface: string;\r\n\r\n  turn: string;\r\n\r\n  statusCheck: StatusType[];\r\n\r\n  laneMax: number;\r\n\r\n  finishTimeMin: number;\r\n\r\n  finishTimeMax: number;\r\n\r\n  corners: Record<string, number>[];\r\n\r\n  slopes: number[];\r\n\r\n  surfaceConstant: Record<string, number>;\r\n\r\n  surfaceCoef: Record<string, number>;\r\n\r\n  baseSpeed: number;\r\n\r\n  raceState: UmaState[];\r\n\r\n  umaCount: number;\r\n\r\n  raceResult: UmaState[][];\r\n}\r\n\r\nexport class Race implements RacePublicProperties {\r\n  private raceTrackId: string;\r\n\r\n  private raceId: string;\r\n\r\n  private groundCond: string;\r\n\r\n  private weather: string;\r\n\r\n  private season: string;\r\n\r\n  raceName;\r\n\r\n  dist;\r\n\r\n  distType;\r\n\r\n  phaseLine;\r\n\r\n  sectionDist;\r\n\r\n  surface;\r\n\r\n  turn;\r\n\r\n  statusCheck;\r\n\r\n  laneMax;\r\n\r\n  finishTimeMin;\r\n\r\n  finishTimeMax;\r\n\r\n  corners;\r\n\r\n  slopes;\r\n\r\n  surfaceConstant;\r\n\r\n  surfaceCoef;\r\n\r\n  baseSpeed;\r\n\r\n  raceState: UmaState[];\r\n\r\n  umaCount;\r\n\r\n  raceResult: UmaState[][];\r\n\r\n  umaList: UmaClass[];\r\n\r\n  umaStateList: UmaState[];\r\n\r\n  distPosKeepCoef: number;\r\n\r\n  constructor(raceOption: RaceOption, umaOptionList: UmaOption[]) {\r\n    // private\r\n    const { raceTrackId, raceId, groundCond, weather, season } = raceOption;\r\n    this.raceTrackId = raceTrackId;\r\n    this.raceId = raceId;\r\n    this.groundCond = groundCond;\r\n    this.weather = weather;\r\n    this.season = season;\r\n\r\n    // public\r\n    const raceTrackData = courseData[raceTrackId];\r\n    const raceData = raceTrackData.courses[raceId as string];\r\n    this.raceName = raceData.name;\r\n    this.dist = raceData.distance;\r\n    this.phaseLine = [\r\n      0,\r\n      (this.dist / 6.0) as number,\r\n      ((this.dist * 2.0) / 3) as number,\r\n      ((this.dist * 5.0) / 6) as number,\r\n      this.dist,\r\n    ];\r\n    this.sectionDist = this.dist / 24.0;\r\n    this.distType = String(raceData.distanceType);\r\n    this.surface = String(raceData.surface);\r\n    this.turn = String(raceData.turn);\r\n    this.statusCheck = raceData.courseSetStatus.map(\r\n      (value: number) => statusType[value - 1]\r\n    );\r\n    this.laneMax = raceData.laneMax;\r\n    this.finishTimeMin = raceData.finishTimeMin;\r\n    this.finishTimeMax = raceData.finishTimeMax;\r\n    this.corners = raceData.corners;\r\n    this.slopes = raceData.slopes;\r\n    this.surfaceConstant = constants.surface[this.surface][this.groundCond];\r\n    this.surfaceCoef = Coefs.surface[this.surface][this.groundCond];\r\n    this.baseSpeed = 22.0 - this.dist / 1000.0;\r\n    this.distPosKeepCoef = 0.0008 * (this.dist - 1000) + 1.0;\r\n\r\n    // Uma\r\n    Uma.setRaceParams(this.getRaceParams());\r\n    this.umaList = umaOptionList.map(\r\n      (umaOption: UmaOption) => new Uma(umaOption)\r\n    );\r\n    this.umaCount = this.umaList.length;\r\n    this.raceResult = [];\r\n    this.umaStateList = this.umaList.map(\r\n      (umaClass: UmaClass, index: number) => {\r\n        this.raceResult.push([]);\r\n        return umaClass.setReady({\r\n          // todo: random the lanePos and waku\r\n          waku: index,\r\n          ...this.getPosDetails(0),\r\n          pos: 0,\r\n          order: index,\r\n          lanePos: 0,\r\n          targetSpeed: 0,\r\n          momentAcc: 0,\r\n          speedNeeded: 0,\r\n          momentSpeed: 3,\r\n          sp: -1,\r\n          cond: {\r\n            startdash: true,\r\n            posKeep: true,\r\n            tempt: false,\r\n            spurt: false,\r\n            tiring: false,\r\n          },\r\n          temptCond: {\r\n            temptCount: 0,\r\n            temptLast: 0,\r\n          },\r\n          posKeepCond: {\r\n            mode: 'normal',\r\n            speedCoef: 1,\r\n            cd: 0,\r\n            start: 0,\r\n            rate:\r\n              (umaClass.style === '1' ? 20 : 15) *\r\n              Math.log10(0.1 * umaClass.status.wisdom),\r\n            floorDist:\r\n              stylePosKeepCoef[umaClass.style][0] * this.distPosKeepCoef,\r\n            ceilDist:\r\n              stylePosKeepCoef[umaClass.style][1] * this.distPosKeepCoef,\r\n          },\r\n        });\r\n      }\r\n    );\r\n\r\n    this.raceState = [];\r\n  }\r\n\r\n  getRaceParams = (): RaceParams => ({\r\n    raceName: this.raceName,\r\n    dist: this.dist,\r\n    distType: this.distType,\r\n    phaseLine: this.phaseLine,\r\n    sectionDist: this.sectionDist,\r\n    surface: this.surface,\r\n    turn: this.turn,\r\n    statusCheck: this.statusCheck,\r\n    laneMax: this.laneMax,\r\n    finishTimeMin: this.finishTimeMin,\r\n    finishTimeMax: this.finishTimeMax,\r\n    corners: this.corners,\r\n    slopes: this.slopes,\r\n    surfaceConstant: this.surfaceConstant,\r\n    surfaceCoef: this.surfaceCoef,\r\n    baseSpeed: this.baseSpeed,\r\n  });\r\n\r\n  getPosDetails = (pos: number) => ({\r\n    phase: this.phaseLine.findIndex((value: number) => pos < value) - 1,\r\n    section: Math.floor(pos / this.sectionDist) + 1,\r\n    ...(() => {\r\n      // Linear interpolation\r\n      const t = (1000 * round(pos)) / this.dist;\r\n      const i = Math.floor(t);\r\n      const slopeValue: number =\r\n        round(\r\n          this.slopes[i] + (this.slopes[i + 1] - this.slopes[i]) * (t - i)\r\n        ) * 100.0;\r\n      let slopeType = 'normal';\r\n      if (slopeValue >= 1) {\r\n        slopeType = 'ascent';\r\n      } else if (slopeValue <= -1) {\r\n        slopeType = 'descent';\r\n      }\r\n      return {\r\n        slopeType,\r\n        slopeValue,\r\n      };\r\n    })(),\r\n  });\r\n\r\n  setUmaOrder = () => {\r\n    this.umaStateList.forEach((umaState: UmaState) => {\r\n      umaState.order = 1;\r\n    });\r\n    const listLength = this.umaStateList.length;\r\n    for (let i = 0; i < listLength; i += 1) {\r\n      for (let j = 0; j < listLength; j += 1) {\r\n        if (i !== j && this.umaStateList[i].pos >= this.umaStateList[j].pos) {\r\n          this.umaStateList[j].order += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  saveFrameResult = (umaState: UmaState, index: number): void => {\r\n    this.raceResult[index].push(umaState);\r\n  };\r\n\r\n  progressRace = (): void => {\r\n    this.umaStateList = this.umaList.map(\r\n      (umaClass: UmaClass, index: number) => {\r\n        let newUmaState;\r\n        if (umaClass.pos >= this.dist) {\r\n          newUmaState = this.umaStateList[index];\r\n        } else {\r\n          newUmaState = {\r\n            ...umaClass.move(\r\n              {\r\n                ...this.umaStateList[index],\r\n                ...this.getPosDetails(this.umaStateList[index].pos),\r\n              },\r\n              this.umaStateList\r\n            ),\r\n          };\r\n        }\r\n        this.saveFrameResult(newUmaState, index);\r\n        return {\r\n          ...this.raceState[index],\r\n          ...newUmaState,\r\n        };\r\n      }\r\n    );\r\n    // this.saveFrameResult();\r\n    this.setUmaOrder();\r\n  };\r\n\r\n  checkAllGoal = (): boolean =>\r\n    this.umaStateList.every((umaState: UmaState) => umaState.pos >= this.dist);\r\n\r\n  getRaceResult = (): UmaState[][] => this.raceResult;\r\n\r\n  getUmaStateList = (): UmaState[] => this.umaStateList;\r\n\r\n  getRaceState = (): UmaState[] => this.raceState;\r\n}\r\n\r\nexport default Race;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getSingleStorage } from '../../functions/LocalStorage';\r\nimport Uma, { UmaState } from './functions/Uma';\r\nimport Race from './functions/Race';\r\nimport { roundNumbers } from '../../functions/Common';\r\n\r\nimport { RaceOption, UmaOption } from './types';\r\n\r\ninterface RaceSimulatorState {\r\n  umaDataList: UmaOption[];\r\n  raceOption: RaceOption;\r\n  raceResult: Record<string, any>;\r\n}\r\n\r\n// const initParams:\r\nconst defaultRaceOption: RaceOption = {\r\n  raceTrackId: '10009',\r\n  raceId: '10903',\r\n  groundCond: '0',\r\n  weather: '1',\r\n  season: '3',\r\n};\r\nconst initRaceOption =\r\n  getSingleStorage('raceOption') === null\r\n    ? defaultRaceOption\r\n    : getSingleStorage('raceOption');\r\n\r\nconst initialState: RaceSimulatorState = {\r\n  umaDataList: [],\r\n  raceOption: initRaceOption as RaceOption,\r\n  raceResult: {},\r\n};\r\n\r\nconst raceSimulatorSlice = createSlice({\r\n  name: 'raceSimulator',\r\n  initialState,\r\n  reducers: {\r\n    saveRace: (state, action) => ({\r\n      ...state,\r\n      raceOption: action.payload,\r\n    }),\r\n    setUmaDataList: (state, action) => ({\r\n      ...state,\r\n      umaDataList: action.payload,\r\n    }),\r\n    simulateStart: (state) => {\r\n      const race = new Race(state.raceOption, state.umaDataList);\r\n      let frameCount = 0;\r\n      while (!race.checkAllGoal() && frameCount < 1600) {\r\n        frameCount += 1;\r\n        race.progressRace();\r\n      }\r\n      state.raceResult = race.getRaceResult();\r\n    },\r\n  },\r\n});\r\n\r\nexport const { saveRace, simulateStart, setUmaDataList } =\r\n  raceSimulatorSlice.actions;\r\n\r\nexport default raceSimulatorSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport localesReducer from './features/locales/localesSlice';\r\nimport raceSimulatorReducer from './features/raceSimulator/raceSimulatorSlice';\r\n// import { apiSlice } from './features/api/apiSlice';\r\n\r\nexport const reducer = combineReducers({\r\n  locales: localesReducer,\r\n  raceSimulator: raceSimulatorReducer,\r\n  // [apiSlice.reducerPath]: apiSlice.reducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  // middleware: getDefaultMiddleware =>\r\n  //   getDefaultMiddleware().concat(apiSlice.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\nexport default store;\r\n","// top module\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n// import * as racesActions from '../features/races/racesSlice';\r\n\r\n// other\r\nimport { UmaOption, StatusType } from '../types';\r\n\r\ninterface Props {\r\n  umaData: UmaOption;\r\n  setUmaData: (arg1: UmaOption) => void;\r\n}\r\n\r\nconst StatusForm = ({ umaData, setUmaData }: Props): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const statusTypeArr = Object.keys(umaData.status) as StatusType[];\r\n  const handleChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    setUmaData({\r\n      ...umaData,\r\n      status: {\r\n        ...umaData.status,\r\n        [e.target.name as StatusType]: Number(e.target.value),\r\n      },\r\n    });\r\n  };\r\n\r\n  const checkError = useCallback(\r\n    (property: string) => {\r\n      const checkValue = umaData.status[property as StatusType];\r\n      return (\r\n        checkValue > 2000 || checkValue < 1 || !Number.isInteger(checkValue)\r\n      );\r\n    },\r\n    [umaData]\r\n  );\r\n\r\n  return (\r\n    <form>\r\n      <FormControl required>\r\n        {statusTypeArr.map((value: StatusType) => (\r\n          <TextField\r\n            key={value}\r\n            id={value}\r\n            name={value}\r\n            value={umaData.status[value as StatusType]}\r\n            type=\"number\"\r\n            label={t(`Uma.${value}`)}\r\n            error={checkError(value)}\r\n            helperText={checkError(value) ? '1~2000' : ''}\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n          />\r\n        ))}\r\n      </FormControl>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StatusForm;\r\n","// top module\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\n\r\ninterface Props {\r\n  umaData: UmaOption;\r\n  setUmaData: (arg1: UmaOption) => void;\r\n}\r\n\r\nconst OptionForm = ({ umaData, setUmaData }: Props): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const handleChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    setUmaData({ ...umaData, [String(e.target.name)]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl required>\r\n        <InputLabel id=\"usingStyle-label\">跑法</InputLabel>\r\n        <Select\r\n          native\r\n          labelId=\"usingStyle-label\"\r\n          id={t('Uma.usingStyle')}\r\n          name=\"usingStyle\"\r\n          value={umaData.usingStyle}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"1\">逃</option>\r\n          <option value=\"2\">先</option>\r\n          <option value=\"3\">差</option>\r\n          <option value=\"4\">追</option>\r\n        </Select>\r\n      </FormControl>\r\n      <FormControl required>\r\n        <InputLabel id=\"motivation-label\">心情</InputLabel>\r\n        <Select\r\n          native\r\n          labelId=\"motivation-label\"\r\n          id={t('Uma.motivation')}\r\n          name=\"motivation\"\r\n          value={umaData.motivation}\r\n          onChange={handleChange}\r\n        >\r\n          <option value=\"0\">絕好調</option>\r\n          <option value=\"1\">好調</option>\r\n          <option value=\"2\">普通</option>\r\n          <option value=\"3\">不調</option>\r\n          <option value=\"4\">絕不調</option>\r\n        </Select>\r\n      </FormControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptionForm;\r\n","// top module\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\n// child components\r\n// import EventDialog from './EventDialog';\r\nimport StatusForm from './StatusForm';\r\nimport OptionForm from './OptionForm';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\nimport {\r\n  getStorage,\r\n  updateStorage,\r\n  showStorage,\r\n} from '../../../functions/LocalStorage';\r\n\r\nconst defaultUma: UmaOption = {\r\n  umaName: '',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 900,\r\n    power: 1200,\r\n    guts: 300,\r\n    wisdom: 300,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'A',\r\n    style: 'A',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\ninterface Props {\r\n  umaIndex: number;\r\n}\r\n\r\nconst MainForm = ({ umaIndex }: Props): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const [umaData, setUmaData] = useState<UmaOption | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storageData = {\r\n      ...defaultUma,\r\n      ...showStorage('umaDataList', umaIndex),\r\n    };\r\n    setUmaData(storageData);\r\n  }, [umaIndex]);\r\n\r\n  const saveUma = () => {\r\n    updateStorage('umaDataList', umaData, umaIndex);\r\n  };\r\n\r\n  const resetUma = () => {\r\n    const rawUmaData = { ...defaultUma, umaName: umaData!.umaName };\r\n    setUmaData(rawUmaData);\r\n    updateStorage('umaDataList', rawUmaData, umaIndex);\r\n  };\r\n  return (\r\n    <>\r\n      {umaData && (\r\n        <>\r\n          <StatusForm umaData={umaData} setUmaData={setUmaData} />\r\n          <OptionForm umaData={umaData} setUmaData={setUmaData} />\r\n          <ButtonGroup\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            aria-label=\"contained primary button group\"\r\n          >\r\n            <Button onClick={() => saveUma()}>{t('save')}</Button>\r\n          </ButtonGroup>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainForm;\r\n","// top module\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\nimport { getStorage, createStorage } from '../../../functions/LocalStorage';\r\n\r\ninterface Props {\r\n  dialogOpen: boolean;\r\n  setDialogOpen: (arg1: boolean) => void;\r\n}\r\n\r\nconst defaultUma: UmaOption = {\r\n  umaName: '',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 900,\r\n    power: 1200,\r\n    guts: 300,\r\n    wisdom: 300,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'A',\r\n    style: 'A',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\nconst CreateUmaDialog = ({ dialogOpen, setDialogOpen }: Props): JSX.Element => {\r\n  const [umaName, setUmaName] = useState<string>('');\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUmaName(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    createStorage('umaDataList', { ...defaultUma, umaName });\r\n    setDialogOpen(false);\r\n  };\r\n  // useEffect(() => {\r\n  //   if (dialogOpen === false) {\r\n\r\n  //   }\r\n  // }, [handleSubmit])\r\n\r\n  return (\r\n    <Dialog\r\n      open={dialogOpen === true}\r\n      onClose={() => setDialogOpen(false)}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">輸入馬娘名字</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"umaName\"\r\n          name=\"umaName\"\r\n          value={umaName}\r\n          label=\"馬娘名字\"\r\n          type=\"string\"\r\n          onChange={handleChange}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)} color=\"primary\">\r\n          關閉\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            handleSubmit();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default CreateUmaDialog;\r\n","// top module\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n} from '@material-ui/core';\r\n\r\n// child components\r\nimport MainForm from './MainForm';\r\nimport CreateUmaDialog from './CreateUmaDialog';\r\nimport StatusForm from './StatusForm';\r\nimport OptionForm from './OptionForm';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\nimport { getStorage } from '../../../functions/LocalStorage';\r\n\r\nconst UmaForm = (): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n  const [umaDataList, setUmaDataList] = useState<UmaOption[] | null>(null);\r\n  const [umaIndex, setUmaIndex] = useState<number>(-1);\r\n\r\n  useEffect(() => {\r\n    const storageData = getStorage('umaDataList') as UmaOption[];\r\n    if (storageData !== null && storageData.length !== 0) {\r\n      setUmaDataList(storageData);\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  const handleChange = (e: any) => {\r\n    setUmaIndex(Number(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {umaDataList && (\r\n        <FormControl required>\r\n          <Select\r\n            native\r\n            labelId=\"umaIndex-label\"\r\n            id=\"umaIndex\"\r\n            name=\"umaIndex\"\r\n            value={umaIndex}\r\n            variant=\"outlined\"\r\n            onChange={handleChange}\r\n          >\r\n            <option disabled value={-1}>\r\n              請選擇馬娘\r\n            </option>\r\n            {umaDataList.map((umaData: UmaOption, index: number) => (\r\n              <option key={umaData.umaName + String(index)} value={index}>\r\n                {umaData.umaName}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      )}\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        aria-label=\"contained primary button group\"\r\n      >\r\n        <Button onClick={() => setDialogOpen(true)}>{t('add')}</Button>\r\n      </ButtonGroup>\r\n      {dialogOpen && (\r\n        <CreateUmaDialog\r\n          dialogOpen={dialogOpen}\r\n          setDialogOpen={setDialogOpen}\r\n        />\r\n      )}\r\n\r\n      {umaIndex !== -1 && <MainForm umaIndex={umaIndex} />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UmaForm;\r\n\r\n// {        <Button\r\n// onClick={() => setDialogOpen('save')}\r\n// disabled={umaIndex === null}\r\n// >\r\n// {t('save')}\r\n// </Button>\r\n// <Button onClick={() => setDialogOpen('delete')}>{t('delete')}</Button>\r\n// <Button onClick={() => setDialogOpen('reset')}>{t('reset')}</Button>}\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../../features/raceSimulator/raceSimulatorSlice';\r\nimport { RootState } from '../../../store';\r\n\r\n// child components\r\n// import RaceResult from './RaceResult';\r\n// import RaceResultMode2 from './RaceResultMode2';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\nimport { generateRandomNumberArray } from '../../../functions/Common';\r\n\r\ninterface Props {\r\n  umaDataList: UmaOption[];\r\n  dialogOpen: boolean;\r\n  setDialogOpen: (arg1: boolean) => void;\r\n}\r\n\r\nconst SelectUma = ({\r\n  umaDataList,\r\n  dialogOpen,\r\n  setDialogOpen,\r\n}: Props): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const [checkbox, setCheckbox] = useState<boolean[]>(\r\n    Array(umaDataList.length).fill(false, 0)\r\n  );\r\n  const dispatch = useDispatch();\r\n  const handleChange = (e: any) => {\r\n    const changeIndex = Number(e.target.name);\r\n    const newCheckbox = [...checkbox];\r\n    newCheckbox[changeIndex] = !newCheckbox[changeIndex];\r\n    setCheckbox(newCheckbox);\r\n  };\r\n  const handleSubmit = () => {\r\n    dispatch(\r\n      raceSimulatorActions.setUmaDataList(\r\n        umaDataList.filter(\r\n          (umaData: UmaOption, index: number) => checkbox[index]\r\n        )\r\n      )\r\n    );\r\n    setDialogOpen(false);\r\n  };\r\n  const checkboxList = useMemo(\r\n    () =>\r\n      umaDataList.map((umaData: UmaOption, index: number) => (\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              name={String(index)}\r\n              checked={checkbox[index]}\r\n              onChange={handleChange}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          }\r\n          label={umaData.umaName}\r\n        />\r\n      )),\r\n    [checkbox]\r\n  );\r\n  return (\r\n    <Dialog\r\n      open={dialogOpen}\r\n      onClose={() => setDialogOpen(false)}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">請選擇參賽的馬娘</DialogTitle>\r\n      <FormGroup>\r\n        {checkboxList}\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked\r\n              onChange={handleChange}\r\n              disabled\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          }\r\n          label=\"啾星雲\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked\r\n              onChange={handleChange}\r\n              disabled\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          }\r\n          label=\"chu星雲\"\r\n        />\r\n      </FormGroup>\r\n      <DialogActions>\r\n        <Button onClick={() => setDialogOpen(false)} color=\"primary\">\r\n          取消\r\n        </Button>\r\n        <Button onClick={handleSubmit} color=\"primary\">\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SelectUma;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo, useRef } from 'react';\r\nimport { Line, Chart, Scatter } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI elements\r\nimport { Button, Slider, Typography } from '@material-ui/core';\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../../features/raceSimulator/raceSimulatorSlice';\r\nimport { RootState } from '../../../store';\r\n\r\n// other\r\nimport { roundNumbers } from '../../../functions/Common';\r\n\r\ninterface Props {\r\n  raceResult: any;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: 300,\r\n    },\r\n  })\r\n);\r\n\r\nconst RaceLineChart = ({ raceResult }: Props): JSX.Element => {\r\n  const raceOption = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceOption\r\n  );\r\n  const [frameIndex, setFrameIndex] = useState(0);\r\n\r\n  const [moveSpeed, setMoveSpeed] = useState(15);\r\n  const classes = useStyles();\r\n\r\n  const intervalRef = useRef<any>(null);\r\n  const options = useMemo(() => {\r\n    const scales = {\r\n      x: {\r\n        type: 'linear',\r\n        ticks: {\r\n          callback: (pos: number, index: number, poses: number[]) => {\r\n            return String(Math.floor(pos / 1));\r\n          },\r\n        },\r\n        min: 0,\r\n        max: 1600,\r\n      },\r\n      y: {\r\n        // display: true,\r\n        min: 0,\r\n        max: raceResult.length + 1,\r\n      },\r\n    };\r\n    const plugins = {\r\n      // responsive: true,\r\n      tooltip: {\r\n        callbacks: {\r\n          label: (context: Record<string, any>) => {\r\n            const { pos, momentSpeed, sp } = context.raw;\r\n            const label = [\r\n              `pos: ${pos}`,\r\n              `momentSpeed: ${momentSpeed}`,\r\n              `sp: ${sp}`,\r\n            ];\r\n            return label;\r\n          },\r\n        },\r\n      },\r\n    };\r\n    return {\r\n      parsing: {\r\n        xAxisKey: 'pos',\r\n        yAxisKey: 'i',\r\n      },\r\n      plugins,\r\n      interaction: {\r\n        intersect: false,\r\n      },\r\n      animation: false,\r\n      scales,\r\n      radius: 5,\r\n    };\r\n  }, [raceResult]);\r\n  const data = useMemo(\r\n    () => ({\r\n      datasets: [\r\n        {\r\n          label: '1',\r\n          data: raceResult.map((umaLineDataList: any, i: number) => ({\r\n            i: i + 1,\r\n            ...umaLineDataList[frameIndex],\r\n          })),\r\n          backgroundColor: 'rgba(255, 99, 132, 1)',\r\n          borderColor: 'rgba(255, 99, 132, 1)',\r\n          borderWidth: 5,\r\n        },\r\n      ],\r\n    }),\r\n    [raceResult, frameIndex]\r\n  );\r\n\r\n  const startMoving = () => {\r\n    if (intervalRef.current) {\r\n      return;\r\n    }\r\n    intervalRef.current = setInterval(() => {\r\n      setFrameIndex((prevState) => prevState + moveSpeed);\r\n    }, 50);\r\n  };\r\n  const stopMoving = () => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n  };\r\n  const handleChange = (e: any, newValue: any) => {\r\n    setMoveSpeed(newValue);\r\n  };\r\n\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: '0',\r\n    },\r\n    {\r\n      value: 15,\r\n      label: '1',\r\n    },\r\n    {\r\n      value: 30,\r\n      label: '2',\r\n    },\r\n    {\r\n      value: 45,\r\n      label: '3',\r\n    },\r\n    {\r\n      value: 60,\r\n      label: '4',\r\n    },\r\n    {\r\n      value: 75,\r\n      label: '5',\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    return () => stopMoving(); // stopMoving when unmounted\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className={classes.root}>\r\n        <Typography id=\"move-speed-slider\" gutterBottom>\r\n          速度(秒為單位)\r\n        </Typography>\r\n        <Slider\r\n          id=\"move-speed-slider\"\r\n          marks={marks}\r\n          value={moveSpeed}\r\n          min={3}\r\n          step={3}\r\n          max={75}\r\n          onChange={handleChange}\r\n          aria-labelledby=\"continuous-slider\"\r\n        />\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onMouseDown={startMoving}\r\n        onMouseUp={stopMoving}\r\n        onMouseLeave={stopMoving}\r\n      >\r\n        按住我前進\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => {\r\n          setFrameIndex(0);\r\n          stopMoving();\r\n        }}\r\n      >\r\n        重設\r\n      </Button>\r\n      <Scatter data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceLineChart;\r\n","// top module\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../../features/raceSimulator/raceSimulatorSlice';\r\nimport { RootState } from '../../../store';\r\n\r\n// child components\r\nimport SelectUma from './SelectUma';\r\nimport RaceForm from './RaceForm';\r\nimport RaceLineChart from './RaceLineChart';\r\n// import RaceResultMode2 from './RaceResultMode2';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\n// import { generateRandomNumberArray } from '../functions/Common';\r\nimport {\r\n  getStorage,\r\n  updateStorage,\r\n  showStorage,\r\n} from '../../../functions/LocalStorage';\r\n\r\nconst defaultUma: UmaOption = {\r\n  umaName: '預設',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 600,\r\n    power: 1200,\r\n    guts: 300,\r\n    wisdom: 300,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'A',\r\n    style: 'A',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\nconst ChampMeet = (): JSX.Element => {\r\n  const { t, i18n } = useTranslation();\r\n  const [umaDataList, setUmaDataList] = useState<UmaOption[] | null>(null);\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n  const dispatch = useDispatch();\r\n  const raceOption = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceOption\r\n  );\r\n  const raceResult = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceResult\r\n  );\r\n\r\n  const simulateStart = (): void => {\r\n    dispatch(raceSimulatorActions.simulateStart());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storageList = getStorage('umaDataList') as UmaOption[];\r\n    if (storageList.length !== 0) {\r\n      setUmaDataList(storageList);\r\n    }\r\n  }, []);\r\n  return (\r\n    <>\r\n      {/*      <RaceForm />\r\n       */}\r\n      {dialogOpen && umaDataList !== null && umaDataList.length !== 0 && (\r\n        <SelectUma\r\n          umaDataList={umaDataList}\r\n          dialogOpen={dialogOpen}\r\n          setDialogOpen={setDialogOpen}\r\n        />\r\n      )}\r\n      <ButtonGroup\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        aria-label=\"contained primary button group\"\r\n      >\r\n        <Button\r\n          onClick={() => setDialogOpen(true)}\r\n          disabled={umaDataList === null || umaDataList.length === 0}\r\n        >\r\n          選擇出賽馬娘\r\n        </Button>\r\n        <Button onClick={() => simulateStart()} disabled={raceOption === null}>\r\n          {t('start')}\r\n        </Button>\r\n      </ButtonGroup>\r\n      {Object.keys(raceResult).length !== 0 && (\r\n        <RaceLineChart raceResult={raceResult} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChampMeet;\r\n","// top module\r\nimport React, { useState } from 'react';\r\n\r\n// UI components\r\nimport { Fab } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\n// child components\r\nimport UmaForm from './umaForm/index';\r\nimport ChampMeet from './champMeet/index';\r\n\r\nconst RaceSimulator = (): JSX.Element => {\r\n  const [selectedForm, setSelectedForm] = useState('');\r\n  return (\r\n    <>\r\n      <UmaForm />\r\n      <ChampMeet />\r\n      <br />\r\n      <h1>未實裝:</h1>\r\n      <h2>下坡加速</h2>\r\n      <h2>開技能使位置意識強行改變</h2>\r\n      <h2>中掛時腳質改變</h2>\r\n      <h2>賢隨機速度(目前直接取平均)</h2>\r\n      <h2>内側移動補正</h2>\r\n      <h2>技能</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceSimulator;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  FormControl,\r\n  Typography,\r\n  Select,\r\n  Switch,\r\n  MenuItem,\r\n  useScrollTrigger,\r\n  Slide,\r\n  Fab,\r\n} from '@material-ui/core';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport FlareIcon from '@material-ui/icons/Flare';\r\n\r\n// redux store\r\nimport * as LocalesActions from '../features/locales/localesSlice';\r\nimport { RootState } from '../store';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  themeButton: {\r\n    marginLeft: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  // state & selector\r\n  const darkMode = useSelector((state: RootState) => state.locales.darkMode);\r\n  const [locale, setLocale] = useState(i18n.language as string);\r\n\r\n  // other\r\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    i18n.changeLanguage(e.target.value as string);\r\n    setLocale(e.target.value as string);\r\n  };\r\n\r\n  // side effect(useEffect): store darkMode or localeLang setting\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', String(darkMode));\r\n  }, [darkMode]);\r\n  useEffect(() => {\r\n    localStorage.setItem('i18nextLng', String(locale));\r\n  }, [locale]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        <AppBar color=\"default\" position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              賽馬娘測試\r\n            </Typography>\r\n            <FormControl>\r\n              <Select\r\n                name=\"locale\"\r\n                value={locale}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n              >\r\n                <MenuItem value=\"zh-TW\">中文</MenuItem>\r\n                <MenuItem value=\"ja\">日文</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Fab\r\n              className={classes.themeButton}\r\n              color=\"primary\"\r\n              aria-label=\"dark\"\r\n              onClick={() => dispatch(LocalesActions.switchDarkMode())}\r\n            >\r\n              {darkMode ? <Brightness3Icon /> : <FlareIcon />}\r\n            </Fab>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  ThemeProvider,\r\n  createTheme,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { CssBaseline, Container, Paper } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// redux store\r\nimport * as LocalesActions from './features/locales/localesSlice';\r\nimport { RootState } from './store';\r\n\r\n// child components\r\nimport RaceSimulator from './components/raceSimulator/index';\r\nimport NavBar from './components/NavBar';\r\n\r\nconst darkTheme: Theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n    // background: {\r\n    //   default: grey[900],\r\n    // },\r\n    primary: grey,\r\n  },\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        marginTop: 4 * 2,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst lightTheme: Theme = createTheme({\r\n  props: {},\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n  overrides: {\r\n    MuiPaper: {\r\n      root: {\r\n        marginTop: 4 * 2,\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst App = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n\r\n  // state & selector\r\n  const darkMode = useSelector((state: RootState) => state.locales.darkMode);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\r\n      {/* error when {theme} only */}\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <NavBar />\r\n        <Paper elevation={3}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" render={() => <RaceSimulator />} />\r\n            </Switch>\r\n          </Router>\r\n        </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// useMemo & useCallback\r\n// const theme = useMemo(() => createTheme({\r\n//   palette: {\r\n//     type: darkMode ? 'dark' : 'light',\r\n//   },\r\n// }), [darkMode]);\r\n","import ja from './ja.json';\r\nimport zhTW from './zh-TW.json';\r\n\r\nexport const resources = {\r\n  ja,\r\n  'zh-TW': zhTW, // hyphen\r\n};\r\n\r\nexport default resources;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport { resources } from './locales/resources';\r\n\r\nconst supportedLngs = ['ja', 'zh-TW'];\r\n\r\nconst options = {\r\n  // order and from where user language should be detected\r\n  order: [\r\n    'localStorage',\r\n    'querystring',\r\n    'cookie',\r\n    'sessionStorage',\r\n    'navigator',\r\n    'htmlTag',\r\n    'path',\r\n    'subdomain',\r\n  ],\r\n\r\n  // keys or params to lookup language from\r\n  lookupQuerystring: 'lng',\r\n  lookupCookie: 'i18next',\r\n  lookupLocalStorage: 'i18nextLng',\r\n  lookupSessionStorage: 'i18nextLng',\r\n  lookupFromPathIndex: 0,\r\n  lookupFromSubdomainIndex: 0,\r\n\r\n  // cache user language on\r\n  caches: ['localStorage'],\r\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n  // optional htmlTag with lang attribute, the default is:\r\n  htmlTag: document.documentElement,\r\n};\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    detection: options,\r\n    resources,\r\n    fallbackLng: 'zh-TW',\r\n    supportedLngs,\r\n\r\n    // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { ApiProvider } from '@reduxjs/toolkit/query/react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\n\r\nimport App from './App';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// dispatch would do twice when in strict mode\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// )\r\n"],"sourceRoot":""}