{"version":3,"sources":["features/locales/localesSlice.ts","functions/LocalStorage.ts","functions/Common.ts","features/raceSimulator/constants/Coefs.tsx","features/raceSimulator/constants/Constants.tsx","features/raceSimulator/functions/Uma.ts","features/raceSimulator/functions/Race.ts","features/raceSimulator/raceSimulatorSlice.tsx","store.tsx","features/raceSimulator/views/umaForm/StatusForm.tsx","features/raceSimulator/views/umaForm/OptionForm.tsx","features/raceSimulator/views/umaForm/MainForm.tsx","features/raceSimulator/views/umaForm/index.tsx","features/raceSimulator/views/champMeet/SelectUma.tsx","features/raceSimulator/views/champMeet/RaceForm.tsx","features/raceSimulator/views/champMeet/UmaParams.tsx","features/raceSimulator/views/champMeet/UmaChart.tsx","features/raceSimulator/views/champMeet/RaceChart.tsx","features/raceSimulator/views/champMeet/index.tsx","features/raceSimulator/views/AddUmaDialog.tsx","features/raceSimulator/views/index.tsx","components/NavBar.tsx","App.tsx","locales/resources.ts","i18n.tsx","index.tsx"],"names":["initialState","darkMode","localStorage","getItem","localesSlice","createSlice","name","reducers","switchDarkMode","state","actions","getStorage","property","storageArray","JSON","parse","e","removeItem","Array","isArray","getSingleStorage","storageObject","round","num","Math","Coefs","motivation","surface","sp","styleFit","S","wisdom","A","B","C","D","E","F","G","distFit","v","a","surfaceFit","usingStyle","phase0","phase1","phase2","phase3","spConsume","normal","tempt","slacking","descentMode","Constants","framesPerSec","statusType","frameLength","speed","power","positionKeep","posKeepSpeedCoef","speedUp","overtake","paceUp","paceDown","Uma","umaOption","rawStatus","umaName","status","style","coefParams","skillActRate","temptRate","spurtSpCoef","spSurfaceCoef","spMax","spurtSpeed","acc","dec","temptSection","setPosKeepCoef","waku","phase","section","slopeValue","pos","lanePos","momentSpeed","order","targetSpeed","temptCond","temptCount","temptLast","posKeepCond","mode","speedCoef","cd","start","rate","floorDist","ceilDist","momentAcc","speedNeeded","cond","startdash","posKeep","spurt","tiring","checkCondStartArr","checkCondEndArr","frameResult","getUmaName","getRawStatus","findUmaPos","umaOrder","umaStateList","umaState","find","curUmaState","undefined","setReady","checkCondStart","raceParams","dist","baseSpeed","spSpeedCoef","totalTime","checkCondEnd","push","random","checkPosKeep","sectionDist","checkPosKeep2","posDiff","lastDist","checkState","filter","condName","updateState","nextSpeed","guts","baseTargetSpeed","getTargetSpeed","baseAcc","getAcc","maxAcc","abs","getNextSpeed","avgSpeed","nextSp","spCost","descent","getNextSp","setState","Object","assign","getState","getFrameResult","saveFrameResult","move","this","fit","motBonus","styleFitCoef","distFitCoef","surfaceFitCoef","usingStyleCoef","obj","rawSpeed","rawStamina","stamina","rawPower","rawGuts","rawWisdom","passiveSkillEffect","statusCheck","reduce","total","curValue","min","ceil","surfaceConstant","minValue","keys","forEach","key","checkMinValue","value","wisMod","log10","vCoef","speedEffect","accCoef","aCoef","max","surfaceCoef","floor","courseData","constants","stylePosKeepCoef","Race","raceOption","umaOptionList","raceTrackId","raceId","groundCond","weather","season","raceName","distType","phaseLine","turn","laneMax","finishTimeMin","finishTimeMax","corners","slopes","raceState","umaCount","raceResult","umaList","distPosKeepCoef","getRaceParams","getPosDetails","findIndex","t","i","slopeType","setUmaOrder","listLength","length","j","index","progressRace","map","umaClass","newUmaState","checkAllGoal","every","getRaceResult","getUmaStateList","getUmaObject","getUmaObjectList","getRaceState","raceData","courses","distance","String","distanceType","courseSetStatus","setRaceParams","umaDataList","raceObject","raceSimulatorSlice","saveRace","action","payload","setUmaDataList","simulateStart","race","frameCount","reducer","combineReducers","locales","localesReducer","raceSimulator","raceSimulatorReducer","store","configureStore","useStyles","makeStyles","theme","root","spacing","gridItem","padding","textField","StatusForm","umaData","setUmaData","useTranslation","classes","i18n","useDispatch","checkError","useCallback","checkValue","Number","isInteger","handleChange","target","Grid","container","className","item","xs","FormControl","required","TextField","id","type","label","error","helperText","variant","onChange","textAlign","formControl","minWidth","select","paddingLeft","select2","OptionForm","InputLabel","Select","autoWidth","displayEmpty","labelId","MenuItem","defaultUma","alignItems","button","MainForm","umaIndex","useState","originData","setOriginData","saveUma","rawArray","setItem","stringify","updateStorage","useEffect","storageData","showStorage","ButtonGroup","color","Button","onClick","marginLeft","marginRight","marginBottom","UmaForm","dialogOpen","setUmaIndex","native","currentTarget","formGroup","SelectUma","checkbox","setCheckbox","changeIndex","newCheckbox","FormGroup","FormControlLabel","control","Checkbox","checked","inputProps","disabled","buttons","display","justifyContent","marginTop","RaceForm","setRaceOption","raceTrackList","useSelector","useMemo","CourseDataGeneral","raceList","selectedRaceTrack","raceTrack","selectedRace","createStyles","table","UmaParams","umaObject","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","width","TableBody","scope","UmaChart","frameResultArray","lineObj","labelList","data","labels","datasets","frameIndex","fill","borderWidth","backgroundColor","options","plugins","legend","title","text","font","size","weight","bottom","tooltip","callbacks","context","raw","parsing","xAxisKey","yAxisKey","scales","x","top","left","right","ticks","maxRotation","minRotation","callback","frameCounts","y","tabs","margin","centered","RaceLineChart","tabValue","setTabValue","umaObjectList","intervalRef","useRef","current","clearInterval","AppBar","position","Tabs","event","newTabValue","indicatorColor","textColor","scrollButtons","Tab","steps","defaultRaceOption","defaultUma2","ChampMeet","dispatch","activeStep","setActiveStep","storageList","Error","storageObj","stepForm","RaceChart","Stepper","Step","StepLabel","stepperObj","raceSimulatorActions","concat","AddUmaDialog","selectedForm","setSelectedForm","setUmaName","handleSubmit","createStorage","Dialog","open","onClose","DialogTitle","DialogContent","autoFocus","fullWidth","DialogActions","fab","fontSize","extendedIcon","RaceSimulator","formObj","direction","Fab","flexGrow","themeButton","palette","background","default","NavBar","trigger","useScrollTrigger","language","locale","setLocale","Slide","appear","in","Toolbar","Typography","changeLanguage","LocalesActions","darkTheme","createTheme","typography","lightTheme","paper","elevation","App","ThemeProvider","CssBaseline","Container","maxWidth","exact","path","render","resources","ja","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupSessionStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","htmlTag","document","documentElement","use","LanguageDetector","initReactI18next","init","detection","fallbackLng","supportedLngs","interpolation","escapeValue","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e2333446.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\n// import i18n from '../../i18n';\r\n// redux is not supporting suspense (i18n.changeLanguage) yet\r\nconst initialState = {\r\n  // locale: i18n.language as string,\r\n  darkMode: localStorage.getItem('darkMode') !== 'false',\r\n};\r\n\r\nconst localesSlice = createSlice({\r\n  name: 'locales',\r\n  initialState,\r\n  reducers: {\r\n    // changeLocale: (state, action) => {\r\n    //   i18n.changeLanguage(action.payload as string);\r\n    //   state.locale = action.payload;\r\n    // },\r\n    switchDarkMode: (state) => {\r\n      state.darkMode = !state.darkMode;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { switchDarkMode } = localesSlice.actions;\r\n\r\nexport default localesSlice.reducer;\r\n","type TArray = <T>(arg: string) => T[];\r\n\r\nexport const getStorage: TArray = (property) => {\r\n  let storageArray = localStorage.getItem(property);\r\n  if (storageArray !== null) {\r\n    try {\r\n      storageArray = JSON.parse(storageArray);\r\n    } catch (e) {\r\n      localStorage.removeItem(property);\r\n      return [];\r\n    }\r\n  }\r\n  if (!Array.isArray(storageArray)) {\r\n    return [];\r\n  }\r\n  return storageArray;\r\n};\r\n\r\nexport const createStorage = (property: string, obj: unknown): void => {\r\n  const rawArray = getStorage(property);\r\n  localStorage.setItem(property, JSON.stringify(rawArray.concat(obj)));\r\n};\r\n\r\nexport const showStorage = (\r\n  property: string,\r\n  index: number\r\n): Record<string, unknown> | null => {\r\n  const rawArray = getStorage(property);\r\n  if (rawArray.length > index) {\r\n    return rawArray[index] as Record<string, unknown>;\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const updateStorage = (\r\n  property: string,\r\n  obj: unknown,\r\n  index: number\r\n): void => {\r\n  const rawArray = getStorage(property);\r\n  if (rawArray.length > index) {\r\n    rawArray[index] = obj;\r\n    localStorage.setItem(property, JSON.stringify(rawArray));\r\n  }\r\n};\r\n\r\nexport const getSingleStorage = (\r\n  property: string\r\n): Record<string, unknown> | null => {\r\n  const storageObject = localStorage.getItem(property);\r\n  if (storageObject !== null) {\r\n    try {\r\n      const object = JSON.parse(storageObject) as Record<string, unknown>;\r\n      return object;\r\n    } catch (e) {\r\n      localStorage.removeItem(property);\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nexport const setSingleStorage = (property: string, obj: unknown): void => {\r\n  localStorage.setItem(property, JSON.stringify(obj));\r\n};\r\n\r\n// export const deleteStorage = (\r\n//   property: string,\r\n//   obj: unknown,\r\n//   mode: string\r\n// ): void => {\r\n//   switch (mode) {\r\n//     case 'replace':\r\n//       localStorage.setItem(property, JSON.stringify(obj));\r\n//       break;\r\n//     default:\r\n//       break;\r\n//   }\r\n// };\r\n\r\nexport default getSingleStorage;\r\n","export const roundNumbers = <T extends Record<PropertyKey, unknown>>(\r\n  obj: T\r\n): T => {\r\n  (Object.keys(obj) as (keyof T)[]).forEach((key: keyof T) => {\r\n    if (typeof obj[key] === 'number') {\r\n      const value = obj[key] as number;\r\n      (obj[key] as number) = (Math.round(value * 1000.0) / 1000.0) as number;\r\n    }\r\n  });\r\n  return obj;\r\n};\r\n\r\nexport const round = (num: number): number =>\r\n  (Math.round(num * 1000.0) / 1000.0) as number;\r\n\r\nexport const checkMinValue = <T extends Record<PropertyKey, unknown>>(\r\n  obj: T,\r\n  minValue: number\r\n): T => {\r\n  (Object.keys(obj) as (keyof T)[]).forEach((key: keyof T) => {\r\n    if (typeof obj[key] === 'number') {\r\n      if (obj[key] <= minValue) {\r\n        (obj[key] as number) = minValue as number;\r\n      }\r\n    }\r\n  });\r\n  return obj;\r\n};\r\n\r\nexport const generateRandomNumberArray = (\r\n  size: number,\r\n  max: number\r\n): Array<number> => {\r\n  const numberArr = [];\r\n  for (let i = 0; i < max; i += 1) {\r\n    numberArr.push(Math.floor(Math.random() * max));\r\n  }\r\n  return numberArr;\r\n};\r\n\r\nexport default generateRandomNumberArray;\r\n","interface CoefData {\r\n  motivation: Record<string, number>;\r\n  surface: Record<string, Record<string, Record<string, number>>>;\r\n  styleFit: Record<string, Record<string, number>>;\r\n  distFit: Record<string, Record<string, number>>;\r\n  surfaceFit: Record<string, Record<string, number>>;\r\n  usingStyle: Record<\r\n    string,\r\n    {\r\n      sp: number;\r\n      v: Record<string, number>;\r\n      a: Record<string, number>;\r\n    }\r\n  >;\r\n  spConsume: Record<string, number>;\r\n}\r\n\r\nexport const Coefs: CoefData = {\r\n  motivation: {\r\n    0: 1.04,\r\n    1: 1.02,\r\n    2: 1,\r\n    3: 0.98,\r\n    4: 0.96,\r\n  },\r\n  surface: {\r\n    1: {\r\n      0: {\r\n        sp: 1,\r\n      },\r\n      1: {\r\n        sp: 1,\r\n      },\r\n      2: {\r\n        sp: 1.02,\r\n      },\r\n      3: {\r\n        sp: 1.02,\r\n      },\r\n    },\r\n    2: {\r\n      0: {\r\n        sp: 1,\r\n      },\r\n      1: {\r\n        sp: 1,\r\n      },\r\n      2: {\r\n        sp: 1.01,\r\n      },\r\n      3: {\r\n        sp: 1.02,\r\n      },\r\n    },\r\n  },\r\n  styleFit: {\r\n    S: {\r\n      wisdom: 1.1,\r\n    },\r\n    A: {\r\n      wisdom: 1,\r\n    },\r\n    B: {\r\n      wisdom: 0.85,\r\n    },\r\n    C: {\r\n      wisdom: 0.75,\r\n    },\r\n    D: {\r\n      wisdom: 0.6,\r\n    },\r\n    E: {\r\n      wisdom: 0.4,\r\n    },\r\n    F: {\r\n      wisdom: 0.2,\r\n    },\r\n    G: {\r\n      wisdom: 0.1,\r\n    },\r\n  },\r\n  distFit: {\r\n    S: {\r\n      v: 1.05,\r\n      a: 1,\r\n    },\r\n    A: {\r\n      v: 1,\r\n      a: 1,\r\n    },\r\n    B: {\r\n      v: 0.9,\r\n      a: 1,\r\n    },\r\n    C: {\r\n      v: 0.8,\r\n      a: 1,\r\n    },\r\n    D: {\r\n      v: 0.6,\r\n      a: 1,\r\n    },\r\n    E: {\r\n      v: 0.4,\r\n      a: 0.6,\r\n    },\r\n    F: {\r\n      v: 0.2,\r\n      a: 0.5,\r\n    },\r\n    G: {\r\n      v: 0.1,\r\n      a: 0.4,\r\n    },\r\n  },\r\n  surfaceFit: {\r\n    S: {\r\n      a: 1.05,\r\n    },\r\n    A: {\r\n      a: 1,\r\n    },\r\n    B: {\r\n      a: 0.9,\r\n    },\r\n    C: {\r\n      a: 0.8,\r\n    },\r\n    D: {\r\n      a: 0.7,\r\n    },\r\n    E: {\r\n      a: 0.5,\r\n    },\r\n    F: {\r\n      a: 0.3,\r\n    },\r\n    G: {\r\n      a: 0.1,\r\n    },\r\n  },\r\n  usingStyle: {\r\n    1: {\r\n      sp: 0.95,\r\n      v: {\r\n        phase0: 1,\r\n        phase1: 0.98,\r\n        phase2: 0.962,\r\n      },\r\n      a: {\r\n        phase0: 1,\r\n        phase1: 1,\r\n        phase2: 0.996,\r\n        phase3: 0.996,\r\n      },\r\n    },\r\n    2: {\r\n      sp: 0.89,\r\n      v: {\r\n        phase0: 0.978,\r\n        phase1: 0.991,\r\n        phase2: 0.975,\r\n      },\r\n      a: {\r\n        phase0: 0.985,\r\n        phase1: 1,\r\n        phase2: 0.996,\r\n        phase3: 0.996,\r\n      },\r\n    },\r\n    3: {\r\n      sp: 1,\r\n      v: {\r\n        phase0: 0.938,\r\n        phase1: 0.998,\r\n        phase2: 0.994,\r\n      },\r\n      a: {\r\n        phase0: 0.975,\r\n        phase1: 1,\r\n        phase2: 1,\r\n        phase3: 1,\r\n      },\r\n    },\r\n    4: {\r\n      sp: 0.995,\r\n      v: {\r\n        phase0: 0.931,\r\n        phase1: 1,\r\n        phase2: 1,\r\n      },\r\n      a: {\r\n        phase0: 0.945,\r\n        phase1: 1,\r\n        phase2: 0.997,\r\n        phase3: 0.997,\r\n      },\r\n    },\r\n  },\r\n  spConsume: {\r\n    normal: 1,\r\n    tempt: 1.6,\r\n    slacking: 0.6,\r\n    descentMode: 0.4,\r\n  },\r\n};\r\n\r\n// export const setCoefData = (\r\n//   umaParams: UmaParams,\r\n//   raceParams: RaceParams\r\n// ): UmaParams => {\r\n//   const { motivation, usingStyle, fit } = umaParams;\r\n//   const { style, dist, surface } = fit;\r\n//   return {\r\n//     ...umaParams,\r\n//     coefData: {\r\n//       motBonus: Coefs.motivation[motivation],\r\n//       styleFitCoef: Coefs.styleFit[style],\r\n//       distFitCoef: Coefs.distFit[dist],\r\n//       surfaceFitCoef: Coefs.surfaceFit[surface],\r\n//       usingStyleCoef: Coefs.usingStyle[usingStyle],\r\n//     },\r\n//   };\r\n// };\r\nexport default Coefs;\r\n","import { StatusType, ConstantsData } from '../types';\r\n\r\nconst framesPerSec = 15;\r\nconst statusType: StatusType[] = [\r\n  'speed',\r\n  'stamina',\r\n  'power',\r\n  'guts',\r\n  'wisdom',\r\n];\r\n\r\nexport const Constants: ConstantsData = {\r\n  framesPerSec,\r\n  statusType,\r\n  frameLength: 1.0 / framesPerSec,\r\n  surface: {\r\n    1: {\r\n      0: {\r\n        speed: 0,\r\n        power: 0,\r\n      },\r\n      1: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      2: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      3: {\r\n        speed: -50,\r\n        power: -50,\r\n      },\r\n    },\r\n    2: {\r\n      0: {\r\n        speed: 0,\r\n        power: -100,\r\n      },\r\n      1: {\r\n        speed: 0,\r\n        power: -50,\r\n      },\r\n      2: {\r\n        speed: 0,\r\n        power: -100,\r\n      },\r\n      3: {\r\n        speed: -50,\r\n        power: -100,\r\n      },\r\n    },\r\n  },\r\n  spConsume: {\r\n    normal: 1,\r\n    tempt: 1.6,\r\n    positionKeep: 0.6,\r\n    descentMode: 0.4,\r\n  },\r\n};\r\n\r\nexport default Constants;\r\n","import {\r\n  UmaOption,\r\n  Status,\r\n  StatusType,\r\n  ConstantsData,\r\n  RaceTrack,\r\n} from '../types';\r\nimport { RaceParams } from './Race';\r\nimport { roundNumbers, round, checkMinValue } from '../../../functions/Common';\r\n\r\nimport { Coefs } from '../constants/Coefs';\r\nimport Constants from '../constants/Constants';\r\n\r\nconst constants: ConstantsData = Constants;\r\nconst { framesPerSec, frameLength, statusType } = constants;\r\n\r\nexport type UmaClass = UmaMethods & UmaParams & UmaState;\r\n\r\ninterface CoefType {\r\n  motBonus: number;\r\n  styleFitCoef: Record<string, number>;\r\n  distFitCoef: Record<string, number>;\r\n  surfaceFitCoef: Record<string, number>;\r\n  usingStyleCoef: {\r\n    sp: number;\r\n    v: Record<string, number>;\r\n    a: Record<string, number>;\r\n  };\r\n}\r\n\r\ninterface UmaMethods {\r\n  // method\r\n  getUmaName: () => string;\r\n  getRawStatus: () => Status;\r\n  setReady: (arg1: UmaState) => any;\r\n  getState: () => any;\r\n  move: (arg1: UmaState, arg2: UmaState[]) => UmaState;\r\n  findUmaPos: (arg1: number, arg2: UmaState[]) => number;\r\n  saveFrameResult: () => void;\r\n  getFrameResult: () => UmaState[];\r\n}\r\n\r\ninterface UmaParams {\r\n  surfaceFit: string;\r\n  distFit: string;\r\n  styleFit: string;\r\n  status: Status;\r\n  motivation: string;\r\n  style: string;\r\n  coefParams: CoefType;\r\n  skillActRate: number;\r\n  temptRate: number;\r\n  spMax: number;\r\n  v: number[];\r\n  spurtSpeed: number;\r\n  acc: number[];\r\n  dec: number[];\r\n  temptSection: number;\r\n  spurtSpCoef: number;\r\n  setPosKeepCoef: any;\r\n  frameResult: UmaState[];\r\n}\r\n\r\nexport interface UmaState {\r\n  waku: number;\r\n  phase: number;\r\n  section: number;\r\n  slopeValue: number;\r\n  pos: number;\r\n  lanePos: number;\r\n  momentSpeed: number;\r\n  targetSpeed: number;\r\n  speedNeeded: number;\r\n  momentAcc: number;\r\n  sp: number;\r\n  order: number;\r\n  temptCond: {\r\n    temptCount: number;\r\n    temptLast: number;\r\n  };\r\n  posKeepCond: {\r\n    mode: 'normal' | 'speedUp' | 'overtake' | 'paceUp' | 'paceDown';\r\n    speedCoef: number;\r\n    cd: number;\r\n    start: number;\r\n    rate: number;\r\n    floorDist: number;\r\n    ceilDist: number;\r\n  };\r\n  cond: Record<string, boolean>;\r\n}\r\n\r\nconst posKeepSpeedCoef = {\r\n  normal: 1.0,\r\n  speedUp: 1.04,\r\n  overtake: 1.05,\r\n  paceUp: 1.04,\r\n  paceDown: 0.915,\r\n};\r\n\r\nexport class Uma implements UmaMethods, UmaParams, UmaState {\r\n  static raceParams: RaceParams;\r\n\r\n  static setRaceParams(raceParams: RaceParams): void {\r\n    this.raceParams = raceParams;\r\n  }\r\n\r\n  private rawStatus: Status;\r\n\r\n  private umaName: string;\r\n\r\n  surfaceFit: string;\r\n\r\n  distFit: string;\r\n\r\n  styleFit: string;\r\n\r\n  status: Status;\r\n\r\n  motivation: string;\r\n\r\n  style: string;\r\n\r\n  coefParams: CoefType;\r\n\r\n  skillActRate: number;\r\n\r\n  temptRate: number;\r\n\r\n  spurtSpCoef: number;\r\n\r\n  spSurfaceCoef: number;\r\n\r\n  spMax: number;\r\n\r\n  v: number[];\r\n\r\n  spurtSpeed: number;\r\n\r\n  acc: number[];\r\n\r\n  dec: number[];\r\n\r\n  temptSection: number;\r\n\r\n  setPosKeepCoef: any;\r\n\r\n  waku = 0;\r\n\r\n  phase = 0;\r\n\r\n  section = 0;\r\n\r\n  slopeValue = 0;\r\n\r\n  pos = 0;\r\n\r\n  lanePos = 0;\r\n\r\n  momentSpeed = 0;\r\n\r\n  sp = 0;\r\n\r\n  order = 0;\r\n\r\n  targetSpeed = 0;\r\n\r\n  temptCond = {\r\n    temptCount: 0,\r\n    temptLast: 0,\r\n  };\r\n\r\n  posKeepCond = {\r\n    mode: 'normal' as UmaState['posKeepCond']['mode'],\r\n    speedCoef: 1,\r\n    cd: 0,\r\n    start: 0,\r\n    rate: 0,\r\n    floorDist: 0,\r\n    ceilDist: 0,\r\n  };\r\n\r\n  momentAcc = 0;\r\n\r\n  speedNeeded = 0;\r\n\r\n  cond: Record<string, boolean> = {\r\n    startdash: true,\r\n    posKeep: true,\r\n    tempt: false,\r\n    spurt: false,\r\n    tiring: false,\r\n  };\r\n\r\n  checkCondStartArr: Array<string> = [];\r\n\r\n  checkCondEndArr: Array<string> = [];\r\n\r\n  frameResult: UmaState[] = [];\r\n\r\n  constructor(umaOption: UmaOption) {\r\n    this.rawStatus = { ...umaOption.status };\r\n    this.umaName = umaOption.umaName;\r\n    this.motivation = umaOption.motivation;\r\n    this.style = umaOption.usingStyle;\r\n\r\n    this.surfaceFit = umaOption.fit.surface;\r\n    this.distFit = umaOption.fit.dist;\r\n    this.styleFit = umaOption.fit.style;\r\n    this.coefParams = {\r\n      motBonus: Coefs.motivation[this.motivation],\r\n      styleFitCoef: Coefs.styleFit[this.styleFit],\r\n      distFitCoef: Coefs.distFit[this.distFit],\r\n      surfaceFitCoef: Coefs.surfaceFit[this.surfaceFit],\r\n      usingStyleCoef: Coefs.usingStyle[this.style],\r\n    };\r\n\r\n    this.status = (() => {\r\n      const { raceParams } = Uma;\r\n      const { motBonus, styleFitCoef } = this.coefParams;\r\n      const {\r\n        speed: rawSpeed,\r\n        stamina: rawStamina,\r\n        power: rawPower,\r\n        guts: rawGuts,\r\n        wisdom: rawWisdom,\r\n      } = this.rawStatus;\r\n\r\n      const speedMutiplier = Uma.raceParams.statusCheck.reduce(\r\n        (total: number, curValue: StatusType) =>\r\n          total +\r\n          Math.min(\r\n            Math.ceil(\r\n              (this.rawStatus[curValue] * this.coefParams.motBonus) / 300\r\n            ),\r\n            4\r\n          ) *\r\n            0.05,\r\n        1\r\n      );\r\n\r\n      // ///////////\r\n      // // todo: let users to set it by themselves\r\n      const passiveSkillEffect = {\r\n        speed: 0,\r\n        stamina: 0,\r\n        power: 0,\r\n        guts: 0,\r\n        wisdom: 0,\r\n      };\r\n\r\n      const status = {\r\n        speed:\r\n          rawSpeed * motBonus * speedMutiplier +\r\n          raceParams.surfaceConstant.speed +\r\n          passiveSkillEffect.speed,\r\n        stamina: rawStamina * motBonus + passiveSkillEffect.stamina,\r\n        power:\r\n          rawPower * motBonus +\r\n          raceParams.surfaceConstant.power +\r\n          passiveSkillEffect.power,\r\n        guts: rawGuts * motBonus + passiveSkillEffect.guts,\r\n        wisdom:\r\n          rawWisdom * motBonus * styleFitCoef.wisdom +\r\n          passiveSkillEffect.wisdom,\r\n      };\r\n      return checkMinValue(roundNumbers(status), 1);\r\n    })();\r\n\r\n    this.v = (() => {\r\n      const { speed, guts, wisdom } = this.status;\r\n      const { distFitCoef, usingStyleCoef } = this.coefParams;\r\n      const { baseSpeed } = Uma.raceParams;\r\n\r\n      // /////////\r\n      // TODO: set random\r\n      // let wisMod = {}\r\n      // wisMod.max = ((umaOption.status.wisdom / 5500) * (Math.log10(umaOption.status.wisdom) - 1) * 0.01)\r\n      // wisMod.min = (wisMod.max - .65)\r\n      // wisMod.avg = (wisMod.max - .325)\r\n      const wisMod =\r\n        ((wisdom / 5500) * Math.log10(wisdom * 0.1) - 0.325) * 0.01;\r\n      const vCoef = usingStyleCoef.v;\r\n      const speedEffect = (speed * 500) ** 0.5 * distFitCoef.v * 0.002;\r\n      this.spurtSpeed = speedEffect;\r\n      return [\r\n        round(baseSpeed * (vCoef.phase0 + wisMod)),\r\n        round(baseSpeed * (vCoef.phase1 + wisMod)),\r\n        round(baseSpeed * (vCoef.phase2 + wisMod) + speedEffect),\r\n        round(baseSpeed * (vCoef.phase2 + wisMod) + speedEffect),\r\n      ];\r\n    })();\r\n    this.spurtSpeed = round(\r\n      this.spurtSpeed + (this.v[2] + Uma.raceParams.baseSpeed * 0.01) * 1.05\r\n    );\r\n    // this.tiringSpeed = Uma.baseSpeed * 0.85 + (this.status.guts * 200) ** 0.5 * 0.001;\r\n\r\n    this.acc = (() => {\r\n      const { surfaceFitCoef, distFitCoef, usingStyleCoef } = this.coefParams;\r\n      const { power } = this.status;\r\n      const accCoef = (500 * power) ** 0.5 * surfaceFitCoef.a * distFitCoef.a;\r\n      const aCoef = usingStyleCoef.a;\r\n      return [\r\n        round(accCoef * 0.0006 * aCoef.phase0),\r\n        round(accCoef * 0.0006 * aCoef.phase1),\r\n        round(accCoef * 0.0006 * aCoef.phase2),\r\n        round(accCoef * 0.0006 * aCoef.phase3),\r\n      ];\r\n    })();\r\n    this.dec = [-0.8, -1.0, -1.2, -1.2];\r\n\r\n    this.skillActRate = Math.max(\r\n      100 - 9000.0 / (this.rawStatus.wisdom * this.coefParams.motBonus),\r\n      20\r\n    );\r\n    this.temptRate = (6.5 / Math.log10(0.1 * this.status.wisdom + 1)) ** 2;\r\n    this.spurtSpCoef = 1 + 200 / (600 * this.status.guts) ** 0.5;\r\n    this.spSurfaceCoef = Uma.raceParams.surfaceCoef.sp;\r\n    this.spMax =\r\n      Uma.raceParams.dist +\r\n      0.8 * this.status.stamina * this.coefParams.usingStyleCoef.sp;\r\n\r\n    this.checkCondStartArr = ['tiring'];\r\n    this.checkCondEndArr = ['startdash', 'posKeep'];\r\n    // todo: rand\r\n    this.temptSection =\r\n      Math.random() * 100 < this.temptRate\r\n        ? Math.floor(Math.random() * 8) + 1\r\n        : -1;\r\n    if (this.temptSection !== -1) {\r\n      this.checkCondStartArr.push('tempt');\r\n    }\r\n  }\r\n\r\n  getUmaName = (): string => this.umaName;\r\n\r\n  getRawStatus = (): Status => this.rawStatus;\r\n\r\n  findUmaPos = (umaOrder: number, umaStateList: UmaState[]): number => {\r\n    const umaState = umaStateList.find(\r\n      (curUmaState: UmaState) => curUmaState.order === umaOrder\r\n    );\r\n    if (umaState === undefined) {\r\n      // todo: checkError\r\n      return 5000;\r\n    }\r\n    return umaState.pos;\r\n  };\r\n\r\n  setReady = (umaState: any): any => ({\r\n    ...umaState,\r\n    sp: this.spMax,\r\n  });\r\n\r\n  checkCondStart: Record<string, () => boolean> = {\r\n    tiring: () => {\r\n      if (this.sp <= 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    spurt: () => {\r\n      if (this.phase < 2) {\r\n        return false;\r\n      }\r\n      const { spurtSpeed, spSurfaceCoef, spurtSpCoef } = this;\r\n      const { dist, baseSpeed } = Uma.raceParams;\r\n      const spSpeedCoef = (spurtSpeed - baseSpeed + 12.0) ** 2 / 144;\r\n      const totalTime = (dist - this.pos - 60) / spurtSpeed;\r\n      return this.sp >= 20 * spSpeedCoef * spSurfaceCoef * totalTime;\r\n    },\r\n    tempt: () => {\r\n      if (this.section === this.temptSection) {\r\n        this.temptCond = {\r\n          temptLast: 3 * framesPerSec,\r\n          temptCount: 1,\r\n        };\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n  };\r\n\r\n  checkCondEnd: Record<string, () => boolean> = {\r\n    tiring: () => {\r\n      if (this.sp > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    startdash: () => {\r\n      if (this.momentSpeed >= Uma.raceParams.baseSpeed * 0.85) {\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    spurt: () => false,\r\n    posKeep: () => {\r\n      if (this.section > 10) {\r\n        this.checkCondStartArr.push('spurt');\r\n        return true;\r\n      }\r\n      return false;\r\n    },\r\n    tempt: () => {\r\n      this.temptCond.temptCount += 1;\r\n      if (this.temptCond.temptCount >= 12 * framesPerSec) {\r\n        return true;\r\n      }\r\n      if (this.temptCond.temptCount < this.temptCond.temptLast) {\r\n        if (Math.random() * 100 < 55) {\r\n          return true;\r\n        }\r\n        this.temptCond.temptLast += 3 * framesPerSec;\r\n      }\r\n      return false;\r\n    },\r\n  };\r\n\r\n  checkPosKeep = (umaStateList: UmaState[]) => {\r\n    switch (this.posKeepCond.mode) {\r\n      case 'normal':\r\n        if (this.posKeepCond.cd === 0) {\r\n          if (Math.random() * 100 < this.posKeepCond.rate || this.cond.tempt) {\r\n            if (this.order === 1 && this.findUmaPos(2, umaStateList) < 4.5) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'speedUp';\r\n            }\r\n            if (this.order !== 1) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'overtake';\r\n            }\r\n          }\r\n          this.posKeepCond.cd = framesPerSec * 3;\r\n          return 'normal';\r\n        }\r\n        this.posKeepCond.cd -= 1;\r\n        return 'normal';\r\n      case 'speedUp':\r\n        if (\r\n          this.pos - this.posKeepCond.start >= Uma.raceParams.sectionDist ||\r\n          this.pos - this.findUmaPos(2, umaStateList) > 4.5\r\n        ) {\r\n          return 'normal';\r\n        }\r\n        return 'speedUp';\r\n      case 'overtake':\r\n        if (\r\n          this.pos - this.posKeepCond.start >= Uma.raceParams.sectionDist ||\r\n          this.pos - this.findUmaPos(2, umaStateList) > 10\r\n        ) {\r\n          return 'normal';\r\n        }\r\n        return 'overtake';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  };\r\n\r\n  checkPosKeep2 = (umaStateList: UmaState[]) => {\r\n    const { ceilDist, floorDist, rate } = this.posKeepCond;\r\n    const { sectionDist } = Uma.raceParams;\r\n    const posDiff = this.findUmaPos(1, umaStateList) - this.pos;\r\n    const lastDist = this.pos - this.posKeepCond.start;\r\n\r\n    switch (this.posKeepCond.mode) {\r\n      case 'normal':\r\n        if (this.posKeepCond.cd === 0) {\r\n          if (posDiff > ceilDist) {\r\n            if (Math.random() * 100 < rate || this.cond.tempt) {\r\n              this.posKeepCond.start = this.pos;\r\n              return 'paceUp';\r\n            }\r\n          } else if (posDiff < floorDist) {\r\n            this.posKeepCond.start = this.pos;\r\n            return 'paceDown';\r\n          }\r\n\r\n          this.posKeepCond.cd = framesPerSec * 3;\r\n          return 'normal';\r\n        }\r\n        this.posKeepCond.cd -= 1;\r\n        return 'normal';\r\n      case 'paceUp':\r\n        if (lastDist >= sectionDist || posDiff > ceilDist) {\r\n          return 'normal';\r\n        }\r\n        return 'paceUp';\r\n      case 'paceDown':\r\n        // todo: if skill on, then true\r\n        if (lastDist >= sectionDist || posDiff > floorDist) {\r\n          return 'normal';\r\n        }\r\n        return 'paceDown';\r\n      default:\r\n        return 'normal';\r\n    }\r\n  };\r\n\r\n  checkState = () => {\r\n    this.checkCondEndArr = this.checkCondEndArr.filter((condName: string) => {\r\n      if (this.checkCondEnd[condName as string]()) {\r\n        this.cond[condName as string] = false;\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n    this.checkCondStartArr = this.checkCondStartArr.filter(\r\n      (condName: string) => {\r\n        if (this.checkCondStart[condName as string]()) {\r\n          this.cond[condName as string] = true;\r\n          return false;\r\n        }\r\n        return true;\r\n      }\r\n    );\r\n  };\r\n\r\n  updateState = (): void => {\r\n    const { baseSpeed } = Uma.raceParams;\r\n    const { momentSpeed, targetSpeed, cond, status, phase, v, acc, dec } = this;\r\n    const getNextSpeed = (): number => {\r\n      const getTargetSpeed = (): number => {\r\n        const getPosKeepCoef = (): number => {\r\n          // todo\r\n          // if (section <= 10 && this.moveState !== 'startdash') {\r\n          //   this.setPosKeepCoef[this.posKeepCond.mode].call(this, raceState);\r\n          //   return posKeepSpeedCoef[this.posKeepCond.mode];\r\n          // }\r\n          return posKeepSpeedCoef[this.posKeepCond.mode];\r\n        };\r\n        const getSkillEffect = (): number => {\r\n          // todo\r\n          return 0;\r\n        };\r\n        const getSlopeEffect = (): number => {\r\n          if (this.slopeValue >= 1) {\r\n            return round((this.slopeValue * -200) / status.power);\r\n          }\r\n          if (this.slopeValue <= -1) {\r\n            // todo\r\n            return 0;\r\n          }\r\n          return 0;\r\n        };\r\n\r\n        if (cond.tiring) {\r\n          return baseSpeed * 0.85 + (status.guts * 200) ** 0.5 * 0.001;\r\n        }\r\n\r\n        let baseTargetSpeed = v[phase];\r\n\r\n        if (cond.startdash) {\r\n          // todo: posKeep vs startdash?\r\n          baseTargetSpeed = 0.85 * Uma.raceParams.baseSpeed;\r\n        } else if (cond.posKeep) {\r\n          baseTargetSpeed *= getPosKeepCoef();\r\n        } else if (cond.spurt) {\r\n          baseTargetSpeed = this.spurtSpeed;\r\n        }\r\n        return baseTargetSpeed + getSlopeEffect() + getSkillEffect();\r\n      };\r\n      const getMomentAcc = (): number => {\r\n        const getAcc = () => {\r\n          let baseAcc = acc[phase];\r\n          if (this.slopeValue >= 1) {\r\n            baseAcc *= 2 / 3;\r\n          }\r\n          if (cond.startdash) {\r\n            baseAcc += 24.0;\r\n          }\r\n\r\n          return baseAcc;\r\n          // todo\r\n          // return baseAcc + getSkillEffect();\r\n        };\r\n        const getDec = () => {\r\n          if (cond.tiring) {\r\n            return -1.2;\r\n          }\r\n          return dec[phase];\r\n        };\r\n        return this.speedNeeded >= 0 ? getAcc() : getDec();\r\n      };\r\n\r\n      this.targetSpeed = getTargetSpeed();\r\n      this.speedNeeded = this.targetSpeed - this.momentSpeed;\r\n      this.momentAcc = getMomentAcc();\r\n      this.speedNeeded = round(this.targetSpeed - this.momentSpeed);\r\n      const maxAcc = this.momentAcc * frameLength;\r\n\r\n      return Math.abs(this.speedNeeded) < Math.abs(maxAcc)\r\n        ? this.targetSpeed\r\n        : this.momentSpeed + maxAcc;\r\n    };\r\n    const getNextSp = (avgSpeed: number): number => {\r\n      let spCost = (20 * (avgSpeed - baseSpeed + 12.0) ** 2) / 144;\r\n      if (cond.tempt) {\r\n        spCost *= 1.6;\r\n      } else if (cond.spurt) {\r\n        spCost *= this.spurtSpCoef;\r\n      }\r\n\r\n      if (cond.descent) {\r\n        spCost *= 0.4;\r\n      }\r\n\r\n      return this.sp - spCost * this.spSurfaceCoef * frameLength;\r\n    };\r\n\r\n    const nextSpeed = round(getNextSpeed());\r\n    const avgSpeed = round((this.momentSpeed + nextSpeed) / 2);\r\n    const nextSp = round(getNextSp(avgSpeed));\r\n\r\n    this.momentSpeed = nextSpeed;\r\n    this.sp = nextSp;\r\n    this.pos += round(avgSpeed * frameLength);\r\n  };\r\n\r\n  setState = (umaState: UmaState) => Object.assign(this, umaState);\r\n\r\n  getState = (): any => ({\r\n    pos: round(this.pos),\r\n    phase: this.phase,\r\n    section: this.section,\r\n    lanePos: 0,\r\n    momentSpeed: this.momentSpeed,\r\n    targetSpeed: this.targetSpeed,\r\n    speedNeeded: this.speedNeeded,\r\n    acc: this.acc,\r\n    sp: this.sp,\r\n    temptCond: { ...this.temptCond },\r\n    posKeepCond: { ...this.posKeepCond },\r\n    cond: this.cond,\r\n  });\r\n\r\n  getFrameResult = (): UmaState[] => this.frameResult;\r\n\r\n  saveFrameResult = (): void => {\r\n    this.frameResult.push(this.getState());\r\n  };\r\n\r\n  move = (umaState: UmaState, umaStateList: UmaState[]): UmaState => {\r\n    this.setState(umaState);\r\n    this.checkState();\r\n    if (this.cond.posKeep) {\r\n      if (this.style === '1') {\r\n        this.posKeepCond.mode = this.checkPosKeep(umaStateList);\r\n      } else {\r\n        this.posKeepCond.mode = this.checkPosKeep2(umaStateList);\r\n      }\r\n    }\r\n    this.updateState();\r\n    this.saveFrameResult();\r\n    return this.getState();\r\n  };\r\n}\r\n\r\nexport default Uma;\r\n","import {\r\n  UmaOption,\r\n  Status,\r\n  StatusType,\r\n  RaceOption,\r\n  ConstantsData,\r\n  RaceTrack,\r\n} from '../types';\r\n\r\nimport Uma, { UmaState, UmaClass } from './Uma';\r\n\r\nimport Constants from '../constants/Constants';\r\nimport CourseData from '../constants/CourseData.json';\r\nimport { Coefs } from '../constants/Coefs';\r\n\r\nimport { roundNumbers, round, checkMinValue } from '../../../functions/Common';\r\n\r\nconst courseData: Record<string, RaceTrack> = CourseData;\r\nconst constants: ConstantsData = Constants;\r\n\r\nconst { framesPerSec, frameLength, statusType } = constants;\r\n\r\nconst posKeepSpeedCoef = {\r\n  normal: 1.0,\r\n  speedUp: 1.04,\r\n  overtake: 1.05,\r\n  paceUp: 1.04,\r\n  paceDown: 0.915,\r\n};\r\n\r\nconst stylePosKeepCoef: Record<string, number[]> = {\r\n  '1': [1.0, 1.0],\r\n  '2': [3.0, 5.0],\r\n  '3': [6.5, 7.0],\r\n  '4': [7.5, 8.0],\r\n};\r\n\r\nexport type RaceObject = RaceParams & RaceMethods & RaceProps;\r\n\r\nexport interface RaceParams {\r\n  raceName: string;\r\n  dist: number;\r\n  phaseLine: number[];\r\n  sectionDist: number;\r\n  distType: string;\r\n  surface: string;\r\n  turn: string;\r\n  statusCheck: StatusType[];\r\n  laneMax: number;\r\n  finishTimeMin: number;\r\n  finishTimeMax: number;\r\n  corners: Record<string, number>[];\r\n  slopes: number[];\r\n  surfaceConstant: Record<string, number>;\r\n  surfaceCoef: Record<string, number>;\r\n  baseSpeed: number;\r\n}\r\n\r\ninterface RaceProps {\r\n  raceState: UmaState[];\r\n  umaCount: number;\r\n  raceResult: UmaState[][];\r\n}\r\n\r\ninterface RaceMethods {\r\n  getRaceParams: () => void;\r\n  getPosDetails: (arg1: number) => Record<string, unknown>;\r\n  setUmaOrder: () => void;\r\n  saveFrameResult: (arg1: UmaState, arg2: number) => void;\r\n  progressRace: () => void;\r\n  checkAllGoal: () => boolean;\r\n  getRaceResult: () => UmaState[][];\r\n  getUmaStateList: () => UmaState[];\r\n  getRaceState: () => UmaState[];\r\n  getUmaObject: (index: number) => UmaClass;\r\n  getUmaObjectList: () => UmaClass[];\r\n}\r\n\r\nexport class Race implements RaceObject {\r\n  private raceTrackId: string;\r\n\r\n  private raceId: string;\r\n\r\n  private groundCond: string;\r\n\r\n  private weather: string;\r\n\r\n  private season: string;\r\n\r\n  raceName;\r\n\r\n  dist;\r\n\r\n  distType;\r\n\r\n  phaseLine;\r\n\r\n  sectionDist;\r\n\r\n  surface;\r\n\r\n  turn;\r\n\r\n  statusCheck;\r\n\r\n  laneMax;\r\n\r\n  finishTimeMin;\r\n\r\n  finishTimeMax;\r\n\r\n  corners;\r\n\r\n  slopes;\r\n\r\n  surfaceConstant;\r\n\r\n  surfaceCoef;\r\n\r\n  baseSpeed;\r\n\r\n  raceState: UmaState[];\r\n\r\n  umaCount;\r\n\r\n  raceResult: UmaState[][];\r\n\r\n  umaList: UmaClass[];\r\n\r\n  umaStateList: UmaState[];\r\n\r\n  distPosKeepCoef: number;\r\n\r\n  constructor(raceOption: RaceOption, umaOptionList: UmaOption[]) {\r\n    // private\r\n    const { raceTrackId, raceId, groundCond, weather, season } = raceOption;\r\n    this.raceTrackId = raceTrackId;\r\n    this.raceId = raceId;\r\n    this.groundCond = groundCond;\r\n    this.weather = weather;\r\n    this.season = season;\r\n\r\n    // public\r\n    const raceTrackData = courseData[raceTrackId];\r\n    const raceData = raceTrackData.courses[raceId as string];\r\n    this.raceName = raceData.name;\r\n    this.dist = raceData.distance;\r\n    this.phaseLine = [\r\n      0,\r\n      (this.dist / 6.0) as number,\r\n      ((this.dist * 2.0) / 3) as number,\r\n      ((this.dist * 5.0) / 6) as number,\r\n      this.dist,\r\n    ];\r\n    this.sectionDist = this.dist / 24.0;\r\n    this.distType = String(raceData.distanceType);\r\n    this.surface = String(raceData.surface);\r\n    this.turn = String(raceData.turn);\r\n    this.statusCheck = raceData.courseSetStatus.map(\r\n      (value: number) => statusType[value - 1]\r\n    );\r\n    this.laneMax = raceData.laneMax;\r\n    this.finishTimeMin = raceData.finishTimeMin;\r\n    this.finishTimeMax = raceData.finishTimeMax;\r\n    this.corners = raceData.corners;\r\n    this.slopes = raceData.slopes;\r\n    this.surfaceConstant = constants.surface[this.surface][this.groundCond];\r\n    this.surfaceCoef = Coefs.surface[this.surface][this.groundCond];\r\n    this.baseSpeed = 22.0 - this.dist / 1000.0;\r\n    this.distPosKeepCoef = 0.0008 * (this.dist - 1000) + 1.0;\r\n\r\n    // Uma\r\n    Uma.setRaceParams(this.getRaceParams());\r\n    this.umaList = umaOptionList.map(\r\n      (umaOption: UmaOption) => new Uma(umaOption)\r\n    );\r\n    this.umaCount = this.umaList.length;\r\n    this.raceResult = [];\r\n    this.umaStateList = this.umaList.map(\r\n      (umaClass: UmaClass, index: number) => {\r\n        this.raceResult.push([]);\r\n        return umaClass.setReady({\r\n          // todo: random the lanePos and waku\r\n          waku: index,\r\n          ...this.getPosDetails(0),\r\n          pos: 0,\r\n          order: index,\r\n          lanePos: 0,\r\n          targetSpeed: 0,\r\n          momentAcc: 0,\r\n          speedNeeded: 0,\r\n          momentSpeed: 3,\r\n          sp: -1,\r\n          cond: {\r\n            startdash: true,\r\n            posKeep: true,\r\n            tempt: false,\r\n            spurt: false,\r\n            tiring: false,\r\n          },\r\n          temptCond: {\r\n            temptCount: 0,\r\n            temptLast: 0,\r\n          },\r\n          posKeepCond: {\r\n            mode: 'normal',\r\n            speedCoef: 1,\r\n            cd: 0,\r\n            start: 0,\r\n            rate:\r\n              (umaClass.style === '1' ? 20 : 15) *\r\n              Math.log10(0.1 * umaClass.status.wisdom),\r\n            floorDist:\r\n              stylePosKeepCoef[umaClass.style][0] * this.distPosKeepCoef,\r\n            ceilDist:\r\n              stylePosKeepCoef[umaClass.style][1] * this.distPosKeepCoef,\r\n          },\r\n        });\r\n      }\r\n    );\r\n\r\n    this.raceState = [];\r\n  }\r\n\r\n  getRaceParams = (): RaceParams => ({\r\n    raceName: this.raceName,\r\n    dist: this.dist,\r\n    distType: this.distType,\r\n    phaseLine: this.phaseLine,\r\n    sectionDist: this.sectionDist,\r\n    surface: this.surface,\r\n    turn: this.turn,\r\n    statusCheck: this.statusCheck,\r\n    laneMax: this.laneMax,\r\n    finishTimeMin: this.finishTimeMin,\r\n    finishTimeMax: this.finishTimeMax,\r\n    corners: this.corners,\r\n    slopes: this.slopes,\r\n    surfaceConstant: this.surfaceConstant,\r\n    surfaceCoef: this.surfaceCoef,\r\n    baseSpeed: this.baseSpeed,\r\n  });\r\n\r\n  getPosDetails = (pos: number) => ({\r\n    phase: this.phaseLine.findIndex((value: number) => pos < value) - 1,\r\n    section: Math.floor(pos / this.sectionDist) + 1,\r\n    ...(() => {\r\n      // Linear interpolation\r\n      const t = (1000 * round(pos)) / this.dist;\r\n      const i = Math.floor(t);\r\n      const slopeValue: number =\r\n        round(\r\n          this.slopes[i] + (this.slopes[i + 1] - this.slopes[i]) * (t - i)\r\n        ) * 100.0;\r\n      let slopeType = 'normal';\r\n      if (slopeValue >= 1) {\r\n        slopeType = 'ascent';\r\n      } else if (slopeValue <= -1) {\r\n        slopeType = 'descent';\r\n      }\r\n      return {\r\n        slopeType,\r\n        slopeValue,\r\n      };\r\n    })(),\r\n  });\r\n\r\n  setUmaOrder = () => {\r\n    this.umaStateList.forEach((umaState: UmaState) => {\r\n      umaState.order = 1;\r\n    });\r\n    const listLength = this.umaStateList.length;\r\n    for (let i = 0; i < listLength; i += 1) {\r\n      for (let j = 0; j < listLength; j += 1) {\r\n        if (i !== j && this.umaStateList[i].pos >= this.umaStateList[j].pos) {\r\n          this.umaStateList[j].order += 1;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  saveFrameResult = (umaState: UmaState, index: number): void => {\r\n    this.raceResult[index].push(umaState);\r\n  };\r\n\r\n  progressRace = (): void => {\r\n    this.umaStateList = this.umaList.map(\r\n      (umaClass: UmaClass, index: number) => {\r\n        let newUmaState;\r\n        if (umaClass.pos >= this.dist) {\r\n          newUmaState = this.umaStateList[index];\r\n        } else {\r\n          newUmaState = {\r\n            ...umaClass.move(\r\n              {\r\n                ...this.umaStateList[index],\r\n                ...this.getPosDetails(this.umaStateList[index].pos),\r\n              },\r\n              this.umaStateList\r\n            ),\r\n          };\r\n        }\r\n        this.saveFrameResult(newUmaState, index);\r\n        return {\r\n          ...this.raceState[index],\r\n          ...newUmaState,\r\n        };\r\n      }\r\n    );\r\n    // this.saveFrameResult();\r\n    this.setUmaOrder();\r\n  };\r\n\r\n  checkAllGoal = (): boolean =>\r\n    this.umaStateList.every((umaState: UmaState) => umaState.pos >= this.dist);\r\n\r\n  getRaceResult = (): UmaState[][] => this.raceResult;\r\n\r\n  getUmaStateList = (): UmaState[] => this.umaStateList;\r\n\r\n  getUmaObject = (index: number): UmaClass => this.umaList[index];\r\n\r\n  getUmaObjectList = (): UmaClass[] => this.umaList;\r\n\r\n  getRaceState = (): UmaState[] => this.raceState;\r\n}\r\n\r\nexport default Race;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nimport { getSingleStorage } from '../../functions/LocalStorage';\r\nimport Uma, { UmaState } from './functions/Uma';\r\nimport Race, { RaceObject } from './functions/Race';\r\nimport { roundNumbers } from '../../functions/Common';\r\n\r\nimport { RaceOption, UmaOption } from './types';\r\n\r\ninterface RaceSimulatorState {\r\n  umaDataList: UmaOption[];\r\n  raceOption: RaceOption;\r\n  raceObject: RaceObject | null;\r\n}\r\n\r\n// const initParams:\r\nconst defaultRaceOption: RaceOption = {\r\n  raceTrackId: '10009',\r\n  raceId: '10903',\r\n  groundCond: '0',\r\n  weather: '1',\r\n  season: '3',\r\n};\r\nconst initRaceOption =\r\n  getSingleStorage('raceOption') === null\r\n    ? defaultRaceOption\r\n    : getSingleStorage('raceOption');\r\n\r\nconst initialState: RaceSimulatorState = {\r\n  umaDataList: [],\r\n  raceOption: initRaceOption as RaceOption,\r\n  raceObject: null,\r\n};\r\n\r\nconst raceSimulatorSlice = createSlice({\r\n  name: 'raceSimulator',\r\n  initialState,\r\n  reducers: {\r\n    saveRace: (state, action) => ({\r\n      ...state,\r\n      raceOption: action.payload,\r\n    }),\r\n    setUmaDataList: (state, action) => ({\r\n      ...state,\r\n      umaDataList: action.payload,\r\n    }),\r\n    simulateStart: (state) => {\r\n      const race = new Race(state.raceOption, state.umaDataList);\r\n      let frameCount = 0;\r\n      while (!race.checkAllGoal() && frameCount < 2000) {\r\n        frameCount += 1;\r\n        race.progressRace();\r\n      }\r\n      state.raceObject = race;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { saveRace, simulateStart, setUmaDataList } =\r\n  raceSimulatorSlice.actions;\r\n\r\nexport default raceSimulatorSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\n\r\nimport localesReducer from './features/locales/localesSlice';\r\nimport raceSimulatorReducer from './features/raceSimulator/raceSimulatorSlice';\r\n// import { apiSlice } from './features/api/apiSlice';\r\n\r\nexport const reducer = combineReducers({\r\n  locales: localesReducer,\r\n  raceSimulator: raceSimulatorReducer,\r\n  // [apiSlice.reducerPath]: apiSlice.reducer,\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer,\r\n  // middleware: getDefaultMiddleware =>\r\n  //   getDefaultMiddleware().concat(apiSlice.middleware),\r\n});\r\n\r\nexport type RootState = ReturnType<typeof reducer>;\r\nexport default store;\r\n","// top module\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n// other\r\nimport { UmaOption, StatusType } from '../../types';\r\n\r\ninterface Props {\r\n  umaData: UmaOption;\r\n  setUmaData: (arg1: UmaOption) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    spacing: theme.spacing(3),\r\n  },\r\n  gridItem: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  textField: {\r\n    padding: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst StatusForm = ({ umaData, setUmaData }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // useMemo & useCallback\r\n  const checkError = useCallback(\r\n    (property: string) => {\r\n      const checkValue = umaData.status[property as StatusType];\r\n      return (\r\n        checkValue > 2000 || checkValue < 1 || !Number.isInteger(checkValue)\r\n      );\r\n    },\r\n    [umaData]\r\n  );\r\n\r\n  // others\r\n  const handleChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    setUmaData({\r\n      ...umaData,\r\n      status: {\r\n        ...umaData.status,\r\n        [e.target.name as StatusType]: Number(e.target.value),\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <Grid container className={classes.root}>\r\n        {(Object.keys(umaData.status) as StatusType[]).map(\r\n          (value: StatusType) => (\r\n            <Grid item xs className={classes.gridItem}>\r\n              <FormControl required>\r\n                <TextField\r\n                  // className={classes.textField}\r\n                  key={value}\r\n                  id={value}\r\n                  name={value}\r\n                  value={umaData.status[value as StatusType]}\r\n                  type=\"number\"\r\n                  label={t(`Uma.${value}`)}\r\n                  error={checkError(value)}\r\n                  helperText={checkError(value) ? '1~2000' : ''}\r\n                  variant=\"outlined\"\r\n                  onChange={handleChange}\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          )\r\n        )}\r\n      </Grid>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StatusForm;\r\n","// top module\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  MenuItem,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n// other\r\nimport { UmaOption } from '../../types';\r\n\r\ninterface Props {\r\n  umaData: UmaOption;\r\n  setUmaData: (arg1: UmaOption) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    spacing: theme.spacing(3),\r\n  },\r\n  gridItem: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  select: {\r\n    paddingLeft: theme.spacing(2),\r\n    textAlign: 'left',\r\n  },\r\n  select2: {\r\n    paddingLeft: theme.spacing(1),\r\n    textAlign: 'left',\r\n  },\r\n}));\r\n\r\nconst OptionForm = ({ umaData, setUmaData }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // others\r\n  const handleChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    setUmaData({ ...umaData, [String(e.target.name)]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={6} className={classes.gridItem}>\r\n        <FormControl required className={classes.formControl}>\r\n          <InputLabel id=\"usingStyle-label\">{t('Uma.usingStyle')}</InputLabel>\r\n          <Select\r\n            autoWidth\r\n            displayEmpty\r\n            labelId=\"usingStyle-label\"\r\n            id=\"usingStyle\"\r\n            name=\"usingStyle\"\r\n            value={umaData.usingStyle}\r\n            onChange={handleChange}\r\n            className={classes.select}\r\n          >\r\n            <MenuItem value=\"1\">逃</MenuItem>\r\n            <MenuItem value=\"2\">先</MenuItem>\r\n            <MenuItem value=\"3\">差</MenuItem>\r\n            <MenuItem value=\"4\">追</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6} className={classes.gridItem}>\r\n        <FormControl required className={classes.formControl}>\r\n          <InputLabel id=\"motivation-label\">{t('Uma.motivation')}</InputLabel>\r\n          <Select\r\n            autoWidth\r\n            displayEmpty\r\n            labelId=\"motivation-label\"\r\n            id=\"motivation\"\r\n            name=\"motivation\"\r\n            value={umaData.motivation}\r\n            onChange={handleChange}\r\n            className={classes.select2}\r\n          >\r\n            <MenuItem value=\"0\">絕好調</MenuItem>\r\n            <MenuItem value=\"1\">好調</MenuItem>\r\n            <MenuItem value=\"2\">普通</MenuItem>\r\n            <MenuItem value=\"3\">不調</MenuItem>\r\n            <MenuItem value=\"4\">絕不調</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default OptionForm;\r\n","// top module\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\n\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n// child components\r\nimport StatusForm from './StatusForm';\r\nimport OptionForm from './OptionForm';\r\n\r\n// other\r\nimport { UmaOption } from '../../types';\r\nimport {\r\n  getStorage,\r\n  updateStorage,\r\n  showStorage,\r\n} from '../../../../functions/LocalStorage';\r\n\r\nconst defaultUma: UmaOption = {\r\n  umaName: '',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 900,\r\n    power: 1200,\r\n    guts: 300,\r\n    wisdom: 300,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'A',\r\n    style: 'A',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\ninterface Props {\r\n  umaIndex: number;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  button: {\r\n    // margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst MainForm = ({ umaIndex }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const [umaData, setUmaData] = useState<UmaOption | null>(null);\r\n  const [originData, setOriginData] = useState<UmaOption | null>(null);\r\n\r\n  // others\r\n  const saveUma = () => {\r\n    updateStorage('umaDataList', umaData, umaIndex);\r\n  };\r\n  const restoredUma = () => {\r\n    const rawUmaData = { ...defaultUma, umaName: umaData!.umaName };\r\n    setUmaData(originData);\r\n  };\r\n\r\n  // sideEffect(useEffect)\r\n  useEffect(() => {\r\n    const storageData = {\r\n      ...defaultUma,\r\n      ...showStorage('umaDataList', umaIndex),\r\n    };\r\n    setUmaData(storageData);\r\n    setOriginData(storageData);\r\n  }, [umaIndex]);\r\n  return (\r\n    <>\r\n      {umaData && (\r\n        <>\r\n          <StatusForm umaData={umaData} setUmaData={setUmaData} />\r\n          <OptionForm umaData={umaData} setUmaData={setUmaData} />\r\n          <div className={classes.root}>\r\n            <ButtonGroup\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              aria-label=\"modify button group\"\r\n            >\r\n              <Button onClick={() => saveUma()} className={classes.button}>\r\n                {t('save')}\r\n              </Button>\r\n              <Button onClick={() => restoredUma()} className={classes.button}>\r\n                {t('restore')}\r\n              </Button>\r\n            </ButtonGroup>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainForm;\r\n","// top module\r\nimport React, { useState, useEffect, useCallback, useMemo } from 'react';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  ButtonGroup,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n// child components\r\nimport MainForm from './MainForm';\r\nimport StatusForm from './StatusForm';\r\nimport OptionForm from './OptionForm';\r\n\r\n// other\r\nimport { UmaOption } from '../../types';\r\nimport { getStorage } from '../../../../functions/LocalStorage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    textAlign: 'center',\r\n    marginLeft: theme.spacing(2),\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst UmaForm = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const [dialogOpen, setDialogOpen] = useState<boolean>(false);\r\n  const [umaDataList, setUmaDataList] = useState<UmaOption[] | null>(null);\r\n  const [umaIndex, setUmaIndex] = useState<number>(-1);\r\n\r\n  useEffect(() => {\r\n    const storageData = getStorage('umaDataList') as UmaOption[];\r\n    if (storageData !== null && storageData.length !== 0) {\r\n      setUmaDataList(storageData);\r\n    }\r\n  }, [dialogOpen]);\r\n\r\n  const handleChange = (e: any) => {\r\n    setUmaIndex(Number(e.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid className={classes.root}>\r\n        {umaDataList && (\r\n          <FormControl required>\r\n            <Select\r\n              native\r\n              labelId=\"umaIndex-label\"\r\n              id=\"umaIndex\"\r\n              name=\"umaIndex\"\r\n              value={umaIndex}\r\n              variant=\"outlined\"\r\n              onChange={handleChange}\r\n              className={classes.formControl}\r\n            >\r\n              {umaDataList.map((umaData: UmaOption, index: number) => (\r\n                <option key={umaData.umaName + String(index)} value={index}>\r\n                  {umaData.umaName}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        )}\r\n\r\n        {umaIndex !== -1 && <MainForm umaIndex={umaIndex} />}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UmaForm;\r\n\r\n// {        <Button\r\n// onClick={() => setDialogOpen('save')}\r\n// disabled={umaIndex === null}\r\n// >\r\n// {t('save')}\r\n// </Button>\r\n// <Button onClick={() => setDialogOpen('delete')}>{t('delete')}</Button>\r\n// <Button onClick={() => setDialogOpen('reset')}>{t('reset')}</Button>}\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  FormHelperText,\r\n  Checkbox,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\nimport { RootState } from '../../../../store';\r\n\r\n// other\r\nimport { UmaOption } from '../../types';\r\nimport { getStorage } from '../../../../functions/LocalStorage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  formGroup: {\r\n    marginLeft: theme.spacing(70),\r\n  },\r\n}));\r\n\r\ninterface Props {\r\n  umaDataList: UmaOption[];\r\n  checkbox: boolean[];\r\n  setCheckbox: (arg1: boolean[]) => void;\r\n}\r\n\r\nconst SelectUma = ({\r\n  umaDataList,\r\n  checkbox,\r\n  setCheckbox,\r\n}: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const handleChange = (e: any) => {\r\n    const changeIndex = Number(e.target.name);\r\n    const newCheckbox = [...checkbox];\r\n    newCheckbox[changeIndex] = !newCheckbox[changeIndex];\r\n    setCheckbox(newCheckbox);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormGroup className={classes.formGroup}>\r\n        {umaDataList.map((umaData: UmaOption, index: number) => (\r\n          <FormControlLabel\r\n            key={umaData.umaName + String(index)}\r\n            control={\r\n              <Checkbox\r\n                name={String(index)}\r\n                checked={checkbox[index]}\r\n                onChange={handleChange}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n              />\r\n            }\r\n            label={umaData.umaName}\r\n          />\r\n        ))}\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked\r\n              onChange={handleChange}\r\n              disabled\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          }\r\n          label=\"啾星雲\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Checkbox\r\n              checked\r\n              onChange={handleChange}\r\n              disabled\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n          }\r\n          label=\"chu星雲\"\r\n        />\r\n      </FormGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectUma;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  TextField,\r\n  Button,\r\n  InputLabel,\r\n  FormHelperText,\r\n  FormControl,\r\n  Select,\r\n  NativeSelect,\r\n  MenuItem,\r\n  Grid,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport { RootState } from '../../../../store';\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\n\r\n// other\r\nimport { RaceOption } from '../../types';\r\nimport CourseDataGeneral from '../../../../data/CourseDataGeneral.json';\r\nimport CourseData from '../../../../data/CourseData.json';\r\nimport {\r\n  getSingleStorage,\r\n  setSingleStorage,\r\n} from '../../../../functions/LocalStorage';\r\n\r\ninterface Props {\r\n  raceOption: RaceOption;\r\n  setRaceOption: (raceOption: RaceOption) => void;\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  gridItem: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n  },\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst RaceForm = ({ raceOption, setRaceOption }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const savedOption = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceOption\r\n  );\r\n\r\n  // callback & memo\r\n  const raceTrackList = useMemo(\r\n    () =>\r\n      CourseDataGeneral.map(({ id, name }) => (\r\n        <MenuItem key={id} value={id}>\r\n          {name}\r\n        </MenuItem>\r\n      )),\r\n    []\r\n  );\r\n  const raceList = useMemo(() => {\r\n    const selectedRaceTrack = CourseDataGeneral.find(\r\n      (raceTrack) => raceTrack.id === raceOption.raceTrackId\r\n    );\r\n    if (selectedRaceTrack !== undefined) {\r\n      const selectedRace = selectedRaceTrack.courses.find(\r\n        (race) => race.id === raceOption.raceId\r\n      );\r\n      if (selectedRace !== undefined) {\r\n        setRaceOption({\r\n          ...raceOption,\r\n          raceId: selectedRace.id,\r\n        });\r\n      } else {\r\n        setRaceOption({\r\n          ...raceOption,\r\n          raceId: selectedRaceTrack.courses[0].id,\r\n        });\r\n      }\r\n      return selectedRaceTrack.courses.map(({ id, name }) => (\r\n        <MenuItem key={id} value={id}>\r\n          {name}\r\n        </MenuItem>\r\n      ));\r\n    }\r\n    return <></>;\r\n  }, [raceOption.raceTrackId]);\r\n\r\n  const handleChange = (\r\n    e: React.ChangeEvent<{ name?: string; value: unknown }>\r\n  ) => {\r\n    setRaceOption({\r\n      ...raceOption,\r\n      [e.target.name as string]: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.gridItem}>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"raceTrackId-label\">\r\n              {t('RaceOption.raceTrackId')}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"raceTrackId-label\"\r\n              id=\"raceTrackId\"\r\n              name=\"raceTrackId\"\r\n              value={raceOption.raceTrackId}\r\n              onChange={handleChange}\r\n            >\r\n              {raceTrackList}\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"raceId-label\">{t('RaceOption.raceId')}</InputLabel>\r\n            <Select\r\n              labelId=\"raceId-label\"\r\n              id=\"raceId\"\r\n              name=\"raceId\"\r\n              value={raceOption.raceId}\r\n              onChange={handleChange}\r\n            >\r\n              {raceList}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} className={classes.gridItem}>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"season-label\">{t('RaceOption.season')}</InputLabel>\r\n            <Select\r\n              labelId=\"season-label\"\r\n              id=\"season\"\r\n              name=\"season\"\r\n              value={raceOption.season}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"1\">春</MenuItem>\r\n              <MenuItem value=\"2\">夏</MenuItem>\r\n              <MenuItem value=\"3\">秋</MenuItem>\r\n              <MenuItem value=\"4\">冬</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"weather-label\">\r\n              {t('RaceOption.weather')}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"weather-label\"\r\n              id=\"weather\"\r\n              name=\"weather\"\r\n              value={raceOption.weather}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"0\">晴</MenuItem>\r\n              <MenuItem value=\"1\">陰</MenuItem>\r\n              <MenuItem value=\"2\">雨</MenuItem>\r\n              <MenuItem value=\"3\">雪</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n          <FormControl required className={classes.formControl}>\r\n            <InputLabel id=\"groundCond-label\">\r\n              {t('RaceOption.groundCond')}\r\n            </InputLabel>\r\n            <Select\r\n              labelId=\"groundCond-label\"\r\n              id=\"groundCond\"\r\n              name=\"groundCond\"\r\n              value={raceOption.groundCond}\r\n              onChange={handleChange}\r\n            >\r\n              <MenuItem value=\"0\">良</MenuItem>\r\n              <MenuItem value=\"1\">稍重</MenuItem>\r\n              <MenuItem value=\"2\">重</MenuItem>\r\n              <MenuItem value=\"3\">不良</MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceForm;\r\n\r\n// { CourseDataGeneral\r\n// //   && CourseDataGeneral.map((track, index) =>\r\n// <MenuItem key={index} value={index}>{track.name}</MenuItem>) }\r\n","// top module\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useCallback,\r\n} from 'react';\r\nimport { Line, Chart, Scatter } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Slider,\r\n  Typography,\r\n  Grid,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  TableContainer,\r\n} from '@material-ui/core';\r\n// redux store\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\nimport { RootState } from '../../../../store';\r\n\r\n// other\r\nimport { roundNumbers } from '../../../../functions/Common';\r\nimport { UmaClass, UmaState } from '../../functions/Uma';\r\nimport { RaceObject } from '../../functions/Race';\r\nimport { StatusType } from '../../types';\r\n\r\ninterface Props {\r\n  umaObject: UmaClass;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      // marginTop: theme.spacing(3),\r\n      // marginLeft: theme.spacing(1),\r\n      // marginRight: theme.spacing(3),\r\n    },\r\n    table: {},\r\n  })\r\n);\r\n\r\nconst UmaParams = ({ umaObject }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const frameResultArray = umaObject.getFrameResult();\r\n  const umaName = umaObject.getUmaName();\r\n  const rawStatus = umaObject.getRawStatus();\r\n\r\n  const {\r\n    surfaceFit,\r\n    distFit,\r\n    styleFit,\r\n    status,\r\n    motivation,\r\n    style,\r\n    coefParams,\r\n    skillActRate,\r\n    temptRate,\r\n    spMax,\r\n    v,\r\n    spurtSpeed,\r\n    acc,\r\n    dec,\r\n    temptSection,\r\n    spurtSpCoef,\r\n    setPosKeepCoef,\r\n    frameResult,\r\n  } = umaObject;\r\n  const statusTypeArray: StatusType[] = [\r\n    'speed',\r\n    'stamina',\r\n    'power',\r\n    'guts',\r\n    'wisdom',\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <Grid container>\r\n        <Grid item xs={2} />\r\n        <Grid item xs={8}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: 160 }}>屬性</TableCell>\r\n                  <TableCell style={{ width: 160 }}>原始</TableCell>\r\n                  <TableCell style={{ width: 160 }}>加成後</TableCell>\r\n                  <TableCell style={{ width: 100 }}>備註</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {statusTypeArray.map((statusType) => (\r\n                  <TableRow key={statusType}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                      {t(`Uma.${statusType}`)}\r\n                    </TableCell>\r\n                    <TableCell>{rawStatus[statusType]}</TableCell>\r\n                    <TableCell>{status[statusType]}</TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={2} />\r\n      </Grid>\r\n      <hr />\r\n      <br />\r\n      <Grid container>\r\n        <Grid item xs={2} />\r\n        <Grid item xs={8}>\r\n          <TableContainer component={Paper}>\r\n            <Table className={classes.table}>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell style={{ width: 160 }}> </TableCell>\r\n                  <TableCell style={{ width: 100 }}>序盤</TableCell>\r\n                  <TableCell style={{ width: 100 }}>中盤</TableCell>\r\n                  <TableCell style={{ width: 100 }}>終盤</TableCell>\r\n                  <TableCell style={{ width: 100 }}>最後衝刺</TableCell>\r\n                  <TableCell style={{ width: 100 }}>體力耗盡</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {t('目標速度')}\r\n                  </TableCell>\r\n                  <TableCell>{v[0]}</TableCell>\r\n                  <TableCell>{v[1]}</TableCell>\r\n                  <TableCell>{v[2]}</TableCell>\r\n                  <TableCell>{spurtSpeed}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {t('加速度')}\r\n                  </TableCell>\r\n                  <TableCell>{acc[0]}</TableCell>\r\n                  <TableCell>{acc[1]}</TableCell>\r\n                  <TableCell>{acc[2]}</TableCell>\r\n                  <TableCell>{acc[3]}</TableCell>\r\n                </TableRow>\r\n                <TableRow>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {t('減速')}\r\n                  </TableCell>\r\n                  <TableCell>{dec[0]}</TableCell>\r\n                  <TableCell>{dec[1]}</TableCell>\r\n                  <TableCell>{dec[2]}</TableCell>\r\n                  <TableCell>{dec[3]}</TableCell>\r\n                  <TableCell>-1.2</TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Grid>\r\n        <Grid item xs={2} />\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nexport default UmaParams;\r\n","// top module\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useCallback,\r\n} from 'react';\r\nimport { Line, Chart, Scatter } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Button, Slider, Typography } from '@material-ui/core';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\nimport { RootState } from '../../../../store';\r\n\r\n// child components\r\nimport UmaParams from './UmaParams';\r\n\r\n// other\r\nimport { roundNumbers } from '../../../../functions/Common';\r\nimport { UmaClass, UmaState } from '../../functions/Uma';\r\nimport { RaceObject } from '../../functions/Race';\r\n\r\ninterface Props {\r\n  umaObject: UmaClass;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      marginTop: theme.spacing(3),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(3),\r\n    },\r\n  })\r\n);\r\n\r\nconst UmaChart = ({ umaObject }: Props): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const frameResultArray = umaObject.getFrameResult();\r\n  const umaName = umaObject.getUmaName();\r\n\r\n  const lineObj = useMemo(() => {\r\n    if (umaObject !== null) {\r\n      const labelList = [];\r\n      for (let i = 0; i < frameResultArray.length; i += 1) {\r\n        labelList.push(i);\r\n      }\r\n      const data = {\r\n        labels: labelList,\r\n        datasets: [\r\n          {\r\n            label: umaName,\r\n            data: frameResultArray.map(\r\n              (frameResult: UmaState, index: number) => ({\r\n                frameIndex: index,\r\n                ...frameResult,\r\n              })\r\n            ),\r\n            fill: false,\r\n            borderWidth: 0,\r\n            backgroundColor: `rgb(225,225,225,0.7)`,\r\n            // borderColor: `rgb(255,99,132,0.9)`,\r\n          },\r\n        ],\r\n      };\r\n      const options = {\r\n        plugins: {\r\n          legend: {\r\n            display: false,\r\n          },\r\n          title: {\r\n            // display: true,\r\n            text: umaName,\r\n            color: `rgb(225,225,225,1)`,\r\n            font: {\r\n              size: 24,\r\n              weight: 'normal',\r\n            },\r\n            padding: {\r\n              bottom: 10,\r\n            },\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: (context: Record<string, any>) => {\r\n                const { pos, momentSpeed, sp } = context.raw;\r\n                const label = [\r\n                  `${t('位置')}: ${pos}`,\r\n                  `${t('當下速度')}: ${momentSpeed}`,\r\n                  `${t('剩餘體力')}: ${sp}`,\r\n                ];\r\n                return label;\r\n              },\r\n            },\r\n          },\r\n        },\r\n        parsing: {\r\n          xAxisKey: 'frameIndex',\r\n          yAxisKey: 'momentSpeed',\r\n        },\r\n        scales: {\r\n          x: {\r\n            display: true,\r\n            title: {\r\n              display: true,\r\n              text: '秒數',\r\n              color: `rgb(225,225,225,1)`,\r\n              font: {\r\n                size: 20,\r\n                weight: 'bold',\r\n                // lineHeight: 1.2,\r\n              },\r\n              padding: { top: 20, left: 0, right: 0, bottom: 0 },\r\n            },\r\n            ticks: {\r\n              color: `rgb(200,200,100,0.7)`,\r\n              font: {\r\n                size: 16,\r\n              },\r\n              maxRotation: 0,\r\n              minRotation: 0,\r\n              callback: (\r\n                frameCount: number,\r\n                index: number,\r\n                frameCounts: number[]\r\n              ) => {\r\n                return String(Math.floor(frameCount / 15));\r\n              },\r\n            },\r\n          },\r\n          y: {\r\n            display: true,\r\n            title: {\r\n              display: true,\r\n              text: '當下速度',\r\n              color: `rgb(225,225,225,1)`,\r\n              font: {\r\n                size: 20,\r\n                weight: 'bold',\r\n                // lineHeight: 1.2,\r\n              },\r\n              padding: { top: 20, left: 0, right: 0, bottom: 0 },\r\n            },\r\n            ticks: {\r\n              color: `rgb(200,100,100,0.7)`,\r\n              font: {\r\n                size: 18,\r\n              },\r\n            },\r\n          },\r\n        },\r\n      };\r\n      return <Line data={data} options={options} />;\r\n    }\r\n    return <></>;\r\n  }, [umaObject]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.root}>{lineObj}</div>\r\n      <UmaParams umaObject={umaObject} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UmaChart;\r\n","// top module\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useRef,\r\n  useCallback,\r\n} from 'react';\r\nimport { Line, Chart, Scatter } from 'react-chartjs-2';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  Button,\r\n  Slider,\r\n  Typography,\r\n  AppBar,\r\n  Tabs,\r\n  Tab,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\nimport { RootState } from '../../../../store';\r\n\r\n// child components\r\nimport UmaChart from './UmaChart';\r\n\r\n// other\r\nimport { roundNumbers } from '../../../../functions/Common';\r\nimport { UmaClass } from '../../functions/Uma';\r\nimport { RaceObject } from '../../functions/Race';\r\n\r\ninterface Props {\r\n  raceObject: RaceObject;\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      backgroundColor: 'transparent',\r\n    },\r\n    tabs: {\r\n      display: 'flex',\r\n      margin: theme.spacing(1),\r\n      centered: true,\r\n    },\r\n  })\r\n);\r\n\r\nconst RaceLineChart = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const [tabValue, setTabValue] = useState<number>(0);\r\n  const [frameIndex, setFrameIndex] = useState<number>(0);\r\n  const [moveSpeed, setMoveSpeed] = useState<number>(15);\r\n  const raceObject = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceObject\r\n  );\r\n  const umaObjectList = useMemo(() => {\r\n    if (raceObject !== null) {\r\n      return raceObject.getUmaObjectList();\r\n    }\r\n    return [];\r\n  }, [raceObject]);\r\n\r\n  const intervalRef = useRef<any>(null);\r\n  // const options = useMemo(() => {\r\n  //   const maxPos = raceObject.reduce((curValue: any, umaLineDataList: any) => {\r\n  //     if (!umaLineDataList[frameIndex]) return curValue;\r\n\r\n  //     return Math.max(curValue, umaLineDataList[frameIndex].pos);\r\n  //   }, 0);\r\n  //   const scales = {\r\n  //     x: {\r\n  //       type: 'linear',\r\n  //       ticks: {\r\n  //         callback: (pos: number, index: number, poses: number[]) => {\r\n  //           return String(pos / 1);\r\n  //         },\r\n  //       },\r\n  //       max: maxPos,\r\n  //       min: maxPos - 50,\r\n  //     },\r\n  //     y: {\r\n  //       // display: true,\r\n  //       min: 0,\r\n  //       max: raceObject.length + 1,\r\n  //     },\r\n  //   };\r\n  //   const plugins = {\r\n  //     // responsive: true,\r\n  //     tooltip: {\r\n  //       callbacks: {\r\n  //         label: (context: Record<string, any>) => {\r\n  //           const { umaName, pos, momentSpeed, sp } = context.raw;\r\n  //           const label = [\r\n  //             `pos: ${pos}`,\r\n  //             `momentSpeed: ${momentSpeed}`,\r\n  //             `sp: ${sp}`,\r\n  //           ];\r\n  //           return label;\r\n  //         },\r\n  //       },\r\n  //     },\r\n  //   };\r\n  //   return {\r\n  //     parsing: {\r\n  //       xAxisKey: 'pos',\r\n  //       yAxisKey: 'i',\r\n  //     },\r\n  //     plugins,\r\n  //     interaction: {\r\n  //       intersect: false,\r\n  //     },\r\n  //     animation: false,\r\n  //     scales,\r\n  //     radius: 5,\r\n  //   };\r\n  // }, [raceObject, frameIndex]);\r\n  // const data = useMemo(\r\n  //   () => ({\r\n  //     datasets: [\r\n  //       {\r\n  //         label: '1',\r\n  //         data: raceObject.map((umaLineDataList: any, i: number) => ({\r\n  //           i: i + 1,\r\n  //           ...umaLineDataList[frameIndex],\r\n  //         })),\r\n  //         backgroundColor: 'rgba(255, 99, 132, 1)',\r\n  //         borderColor: 'rgba(255, 99, 132, 1)',\r\n  //         borderWidth: 5,\r\n  //       },\r\n  //     ],\r\n  //   }),\r\n  //   [raceObject, frameIndex]\r\n  // );\r\n\r\n  const startMoving = () => {\r\n    if (intervalRef.current) {\r\n      return;\r\n    }\r\n    intervalRef.current = setInterval(() => {\r\n      setFrameIndex((prevState) => prevState + moveSpeed);\r\n    }, 50);\r\n  };\r\n  const stopMoving = () => {\r\n    if (intervalRef.current) {\r\n      clearInterval(intervalRef.current);\r\n      intervalRef.current = null;\r\n    }\r\n  };\r\n  // const handleChange = (e: any, newValue: any) => {\r\n  //   setMoveSpeed(newValue);\r\n  // };\r\n\r\n  const handleTabChange = (\r\n    event: React.ChangeEvent<unknown>,\r\n    newTabValue: number\r\n  ) => {\r\n    setTabValue(newTabValue);\r\n  };\r\n  const marks = [\r\n    {\r\n      value: 0,\r\n      label: '0',\r\n    },\r\n    {\r\n      value: 15,\r\n      label: '1',\r\n    },\r\n    {\r\n      value: 30,\r\n      label: '2',\r\n    },\r\n    {\r\n      value: 45,\r\n      label: '3',\r\n    },\r\n    {\r\n      value: 60,\r\n      label: '4',\r\n    },\r\n    {\r\n      value: 75,\r\n      label: '5',\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    return () => stopMoving(); // stopMoving when unmounted\r\n  }, []);\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={classes.root}>\r\n        <Tabs\r\n          value={tabValue}\r\n          onChange={handleTabChange}\r\n          centered\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"auto\"\r\n          aria-label=\"uma tabs\"\r\n          className={classes.tabs}\r\n        >\r\n          {umaObjectList.map((umaObject: UmaClass, index: number) => (\r\n            <Tab label={umaObject.getUmaName()} />\r\n          ))}\r\n        </Tabs>\r\n      </AppBar>\r\n      <UmaChart umaObject={umaObjectList[tabValue]} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceLineChart;\r\n\r\n// {      <Scatter data={data} options={options} />\r\n// }\r\n// {      <div className={classes.root}>\r\n//         <Typography id=\"move-speed-slider\" gutterBottom>\r\n//           速度(秒為單位)\r\n//         </Typography>\r\n//         <Slider\r\n//           id=\"move-speed-slider\"\r\n//           marks={marks}\r\n//           value={moveSpeed}\r\n//           min={3}\r\n//           step={3}\r\n//           max={75}\r\n//           onChange={handleChange}\r\n//           aria-labelledby=\"continuous-slider\"\r\n//         />\r\n//       </div>\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         onMouseDown={startMoving}\r\n//         onMouseUp={stopMoving}\r\n//         onMouseLeave={stopMoving}\r\n//       >\r\n//         按住我前進\r\n//       </Button>\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         color=\"primary\"\r\n//         onClick={() => {\r\n//           setFrameIndex(0);\r\n//           stopMoving();\r\n//         }}\r\n//       >\r\n//         重設\r\n//       </Button>}\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  ButtonGroup,\r\n  Button,\r\n  Stepper,\r\n  Step,\r\n  StepLabel,\r\n} from '@material-ui/core';\r\n\r\n// redux store\r\nimport * as raceSimulatorActions from '../../raceSimulatorSlice';\r\nimport { RootState } from '../../../../store';\r\n\r\n// child components\r\nimport SelectUma from './SelectUma';\r\nimport RaceForm from './RaceForm';\r\nimport RaceChart from './RaceChart';\r\n\r\n// other\r\nimport { UmaOption, RaceOption } from '../../types';\r\nimport {\r\n  getStorage,\r\n  updateStorage,\r\n  showStorage,\r\n  getSingleStorage,\r\n} from '../../../../functions/LocalStorage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  buttons: {\r\n    display: 'flex',\r\n    justifyContent: 'flex-end',\r\n  },\r\n  button: {\r\n    marginTop: theme.spacing(3),\r\n    marginRight: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst steps = ['選擇出賽馬娘', '選擇賽道', '模擬開始'];\r\nconst defaultRaceOption: RaceOption = {\r\n  raceTrackId: '10009',\r\n  raceId: '10903',\r\n  groundCond: '0',\r\n  weather: '1',\r\n  season: '3',\r\n};\r\nconst defaultUma: UmaOption = {\r\n  umaName: '啾星雲',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 600,\r\n    power: 901,\r\n    guts: 300,\r\n    wisdom: 1200,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'S',\r\n    style: 'S',\r\n  },\r\n  motivation: '0',\r\n};\r\nconst defaultUma2: UmaOption = {\r\n  umaName: 'chu星雲',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 600,\r\n    power: 901,\r\n    guts: 300,\r\n    wisdom: 1200,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'S',\r\n    style: 'S',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\nconst ChampMeet = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const [activeStep, setActiveStep] = useState<number>(0);\r\n  const raceObject = useSelector(\r\n    (state: RootState) => state.raceSimulator.raceObject\r\n  );\r\n\r\n  // state & selector\r\n  const [umaDataList, setUmaDataList] = useState<UmaOption[]>([]);\r\n  const [checkbox, setCheckbox] = useState<boolean[]>([]);\r\n  const [raceOption, setRaceOption] = useState<RaceOption | null>(null);\r\n\r\n  const stepperObj = () => {\r\n    let stepForm;\r\n    if (umaDataList !== null && raceOption !== null) {\r\n      switch (activeStep) {\r\n        case 0:\r\n          stepForm = (\r\n            <SelectUma\r\n              umaDataList={umaDataList}\r\n              checkbox={checkbox}\r\n              setCheckbox={setCheckbox}\r\n            />\r\n          );\r\n          break;\r\n        case 1:\r\n          stepForm = (\r\n            <RaceForm raceOption={raceOption} setRaceOption={setRaceOption} />\r\n          );\r\n          break;\r\n        case 2:\r\n          stepForm = <RaceChart />;\r\n          break;\r\n        default:\r\n          throw new Error('Unknown step');\r\n      }\r\n      return [\r\n        <Stepper activeStep={activeStep}>\r\n          {steps.map((label, index) => (\r\n            <Step key={label}>\r\n              <StepLabel>{label}</StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>,\r\n        stepForm,\r\n      ];\r\n    }\r\n    return <></>;\r\n  };\r\n\r\n  const handleSubmit = (): void => {\r\n    dispatch(\r\n      raceSimulatorActions.setUmaDataList(\r\n        umaDataList\r\n          .filter((umaData: UmaOption, index: number) => checkbox[index])\r\n          .concat(defaultUma, defaultUma2)\r\n      )\r\n    );\r\n    dispatch(raceSimulatorActions.saveRace(raceOption));\r\n    dispatch(raceSimulatorActions.simulateStart());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const storageList = getStorage('umaDataList') as UmaOption[];\r\n    if (storageList.length !== 0) {\r\n      setUmaDataList(storageList);\r\n      setCheckbox(Array(storageList.length).fill(false));\r\n    } else {\r\n      throw new Error('至少需要一隻馬娘');\r\n    }\r\n\r\n    const storageObj = getSingleStorage('raceOption');\r\n    if (storageObj !== null) {\r\n      setRaceOption(Object.assign(defaultRaceOption, storageObj));\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {stepperObj()}\r\n      <div className={classes.buttons}>\r\n        {activeStep === 1 && (\r\n          <Button\r\n            onClick={() => setActiveStep(activeStep - 1)}\r\n            className={classes.button}\r\n          >\r\n            {t('返回')}\r\n          </Button>\r\n        )}\r\n        {activeStep < 2 && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setActiveStep(activeStep + 1);\r\n              if (activeStep === 1) {\r\n                handleSubmit();\r\n              }\r\n            }}\r\n            className={classes.button}\r\n          >\r\n            {activeStep < 1 ? t('下一步') : t('比賽開始')}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChampMeet;\r\n","// top module\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\n\r\n// UI components\r\nimport {\r\n  TextField,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n} from '@material-ui/core';\r\n\r\n// other\r\nimport { UmaOption } from '../types';\r\nimport { getStorage, createStorage } from '../../../functions/LocalStorage';\r\n\r\ninterface Props {\r\n  selectedForm: string;\r\n  setSelectedForm: (arg1: string) => void;\r\n}\r\n\r\nconst defaultUma: UmaOption = {\r\n  umaName: '',\r\n  status: {\r\n    speed: 1200,\r\n    stamina: 900,\r\n    power: 1200,\r\n    guts: 300,\r\n    wisdom: 300,\r\n  },\r\n  usingStyle: '1',\r\n  fit: {\r\n    surface: 'A',\r\n    dist: 'A',\r\n    style: 'A',\r\n  },\r\n  motivation: '0',\r\n};\r\n\r\nconst AddUmaDialog = ({\r\n  selectedForm,\r\n  setSelectedForm,\r\n}: Props): JSX.Element => {\r\n  const [umaName, setUmaName] = useState<string>('');\r\n\r\n  const checkError = useCallback(() => {\r\n    return umaName === '';\r\n  }, [umaName]);\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setUmaName(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!checkError()) {\r\n      createStorage('umaDataList', { ...defaultUma, umaName });\r\n      setSelectedForm('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={selectedForm === 'AddUma'}\r\n      onClose={() => setSelectedForm('')}\r\n      aria-labelledby=\"form-dialog-title\"\r\n    >\r\n      <DialogTitle id=\"form-dialog-title\">輸入馬娘名字</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"umaName\"\r\n          name=\"umaName\"\r\n          value={umaName}\r\n          label=\"馬娘名字\"\r\n          type=\"string\"\r\n          error={checkError()}\r\n          onChange={handleChange}\r\n          helperText={checkError() ? '不能為空' : ''}\r\n          fullWidth\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={() => setSelectedForm('')} color=\"primary\">\r\n          關閉\r\n        </Button>\r\n        <Button\r\n          disabled={checkError()}\r\n          onClick={() => {\r\n            handleSubmit();\r\n          }}\r\n          color=\"primary\"\r\n        >\r\n          確定\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddUmaDialog;\r\n","// top module\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport { Fab, Grid } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DirectionsRunIcon from '@material-ui/icons/DirectionsRun';\r\n\r\n// child components\r\nimport UmaForm from './umaForm/index';\r\nimport ChampMeet from './champMeet/index';\r\nimport AddUmaDialog from './AddUmaDialog';\r\n// others\r\nimport { getStorage } from '../../../functions/LocalStorage';\r\nimport { UmaOption } from '../types';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {},\r\n  gridItem: {\r\n    marginTop: theme.spacing(3),\r\n    marginBottom: theme.spacing(3),\r\n    justifyContent: 'center',\r\n    textAlign: 'center',\r\n  },\r\n  fab: {\r\n    fontSize: 20,\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst RaceSimulator = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const [selectedForm, setSelectedForm] = useState('');\r\n  const [umaDataList, setUmaDataList] = useState<UmaOption[] | null>(null);\r\n\r\n  useEffect(() => {\r\n    const storageData = getStorage('umaDataList') as UmaOption[];\r\n    if (storageData !== null && storageData.length !== 0) {\r\n      setUmaDataList(storageData);\r\n    }\r\n  }, []);\r\n\r\n  const formObj = useMemo(() => {\r\n    switch (selectedForm) {\r\n      case 'AddUma':\r\n        return (\r\n          <AddUmaDialog\r\n            selectedForm={selectedForm}\r\n            setSelectedForm={setSelectedForm}\r\n          />\r\n        );\r\n      case 'UmaForm':\r\n        return <UmaForm />;\r\n      case 'ChampMeet':\r\n        return <ChampMeet />;\r\n      default:\r\n        return <div />;\r\n    }\r\n  }, [selectedForm]);\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"row\" className={classes.root}>\r\n        <Grid item xs={4} className={classes.gridItem}>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            aria-label=\"AddUma\"\r\n            onClick={() => setSelectedForm('AddUma')}\r\n            variant=\"extended\"\r\n          >\r\n            <AddIcon className={classes.extendedIcon} />\r\n            新增馬娘\r\n          </Fab>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.gridItem}>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            aria-label=\"UmaForm\"\r\n            onClick={() => setSelectedForm('UmaForm')}\r\n            disabled={umaDataList === null || umaDataList.length === 0}\r\n            variant=\"extended\"\r\n          >\r\n            <EditIcon className={classes.extendedIcon} />\r\n            編輯馬娘\r\n          </Fab>\r\n        </Grid>\r\n        <Grid item xs={4} className={classes.gridItem}>\r\n          <Fab\r\n            className={classes.fab}\r\n            color=\"primary\"\r\n            aria-label=\"ChampMeet\"\r\n            disabled={umaDataList === null || umaDataList.length === 0}\r\n            onClick={() => setSelectedForm('ChampMeet')}\r\n            variant=\"extended\"\r\n          >\r\n            <DirectionsRunIcon className={classes.extendedIcon} />\r\n            設定出賽\r\n          </Fab>\r\n        </Grid>\r\n      </Grid>\r\n      {formObj}\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <h1>未實裝:</h1>\r\n      <h2>完場結果回報</h2>\r\n      <h2>設定先頭馬預留空間</h2>\r\n      <h2>圖表區間化</h2>\r\n      <h2>加減速 上下坡展現</h2>\r\n      <h2>下坡加速</h2>\r\n      <h2>開技能使位置意識強行改變</h2>\r\n      <h2>中掛時腳質改變</h2>\r\n      <h2>賢隨機速度(目前直接取平均)</h2>\r\n      <h2>内側移動補正</h2>\r\n      <h2>技能</h2>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RaceSimulator;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  FormControl,\r\n  Typography,\r\n  Select,\r\n  Switch,\r\n  MenuItem,\r\n  useScrollTrigger,\r\n  Slide,\r\n  Fab,\r\n} from '@material-ui/core';\r\nimport Brightness3Icon from '@material-ui/icons/Brightness3';\r\nimport FlareIcon from '@material-ui/icons/Flare';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// redux store\r\nimport * as LocalesActions from '../features/locales/localesSlice';\r\nimport { RootState } from '../store';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  themeButton: {\r\n    marginLeft: theme.spacing(2),\r\n    color: theme.palette.background.default,\r\n  },\r\n}));\r\n\r\nconst NavBar = () => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const trigger = useScrollTrigger();\r\n\r\n  // state & selector\r\n  const darkMode = useSelector((state: RootState) => state.locales.darkMode);\r\n  const [locale, setLocale] = useState(i18n.language as string);\r\n\r\n  // other\r\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\r\n    i18n.changeLanguage(e.target.value as string);\r\n    setLocale(e.target.value as string);\r\n  };\r\n\r\n  // side effect(useEffect): store darkMode or localeLang setting\r\n  useEffect(() => {\r\n    localStorage.setItem('darkMode', String(darkMode));\r\n  }, [darkMode]);\r\n  useEffect(() => {\r\n    localStorage.setItem('i18nextLng', String(locale));\r\n  }, [locale]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slide appear={false} direction=\"down\" in={!trigger}>\r\n        <AppBar color=\"default\" position=\"static\">\r\n          <Toolbar>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              賽馬娘測試\r\n            </Typography>\r\n            <FormControl>\r\n              <Select\r\n                name=\"locale\"\r\n                value={locale}\r\n                onChange={handleChange}\r\n                displayEmpty\r\n              >\r\n                <MenuItem value=\"zh-TW\">中文</MenuItem>\r\n                <MenuItem value=\"ja\">日文</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <Fab\r\n              className={classes.themeButton}\r\n              aria-label=\"dark\"\r\n              onClick={() => dispatch(LocalesActions.switchDarkMode())}\r\n            >\r\n              {darkMode ? <Brightness3Icon /> : <FlareIcon />}\r\n            </Fab>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Slide>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","// top module\r\nimport React, { useState, useEffect, useMemo } from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n// UI components\r\nimport {\r\n  ThemeProvider,\r\n  createTheme,\r\n  Theme,\r\n  createStyles,\r\n  makeStyles,\r\n} from '@material-ui/core/styles';\r\nimport { CssBaseline, Container, Paper } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\n// redux store\r\nimport * as LocalesActions from './features/locales/localesSlice';\r\nimport { RootState } from './store';\r\n\r\n// child components\r\nimport RaceSimulator from './features/raceSimulator/views/index';\r\nimport NavBar from './components/NavBar';\r\n\r\nconst darkTheme: Theme = createTheme({\r\n  palette: {\r\n    type: 'dark',\r\n  },\r\n  typography: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nconst lightTheme: Theme = createTheme({\r\n  palette: {\r\n    type: 'light',\r\n  },\r\n  typography: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(2),\r\n    elevation: 3,\r\n  },\r\n}));\r\n\r\nconst App = (): JSX.Element => {\r\n  // common hooks\r\n  const { t, i18n } = useTranslation();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  // state & selector\r\n  const darkMode = useSelector((state: RootState) => state.locales.darkMode);\r\n\r\n  return (\r\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\r\n      {/* error when {theme} only */}\r\n      <CssBaseline />\r\n      <Container maxWidth=\"lg\">\r\n        <NavBar />\r\n        <Paper className={classes.paper}>\r\n          <Router>\r\n            <Switch>\r\n              <Route exact path=\"/\" render={() => <RaceSimulator />} />\r\n            </Switch>\r\n          </Router>\r\n        </Paper>\r\n      </Container>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// useMemo & useCallback\r\n// const theme = useMemo(() => createTheme({\r\n//   palette: {\r\n//     type: darkMode ? 'dark' : 'light',\r\n//   },\r\n// }), [darkMode]);\r\n","import ja from './ja.json';\r\nimport zhTW from './zh-TW.json';\r\n\r\nexport const resources = {\r\n  ja,\r\n  'zh-TW': zhTW, // hyphen\r\n};\r\n\r\nexport default resources;\r\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\nimport { resources } from './locales/resources';\r\n\r\nconst supportedLngs = ['ja', 'zh-TW'];\r\n\r\nconst options = {\r\n  // order and from where user language should be detected\r\n  order: [\r\n    'localStorage',\r\n    'querystring',\r\n    'cookie',\r\n    'sessionStorage',\r\n    'navigator',\r\n    'htmlTag',\r\n    'path',\r\n    'subdomain',\r\n  ],\r\n\r\n  // keys or params to lookup language from\r\n  lookupQuerystring: 'lng',\r\n  lookupCookie: 'i18next',\r\n  lookupLocalStorage: 'i18nextLng',\r\n  lookupSessionStorage: 'i18nextLng',\r\n  lookupFromPathIndex: 0,\r\n  lookupFromSubdomainIndex: 0,\r\n\r\n  // cache user language on\r\n  caches: ['localStorage'],\r\n  excludeCacheFor: ['cimode'], // languages to not persist (cookie, localStorage)\r\n\r\n  // optional htmlTag with lang attribute, the default is:\r\n  htmlTag: document.documentElement,\r\n};\r\n\r\ni18n\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next) // passes i18n down to react-i18next\r\n  .init({\r\n    detection: options,\r\n    resources,\r\n    fallbackLng: 'zh-TW',\r\n    supportedLngs,\r\n\r\n    // language to use, more information here: https://www.i18next.com/overview/configuration-options#languages-namespaces-resources\r\n    // you can use the i18n.changeLanguage function to change the language manually: https://www.i18next.com/overview/api#changelanguage\r\n    // if you're using a language detector, do not define the lng option\r\n\r\n    interpolation: {\r\n      escapeValue: false, // react already safes from xss\r\n    },\r\n  });\r\n\r\nexport default i18n;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import { ApiProvider } from '@reduxjs/toolkit/query/react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from './store';\r\n\r\nimport App from './App';\r\nimport './i18n';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// dispatch would do twice when in strict mode\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <Provider store={store}>\r\n//       <App />\r\n//     </Provider>\r\n//   </React.StrictMode>,\r\n//   document.getElementById('root')\r\n// )\r\n"],"sourceRoot":""}